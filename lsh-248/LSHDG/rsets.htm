<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Defining Report Sets</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1093" />
<meta name="dcterms.created" content="2018-05-25T8:22:16Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Life Sciences Data Hub Application Developer's Guide" />
<meta name="dcterms.identifier" content="E95831-01" />
<meta name="dcterms.isVersionOf" content="LSHDG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2006, 2018,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="dm.htm" title="Previous" type="text/html" />
<link rel="Next" href="wkfl.htm" title="Next" type="text/html" />
<link rel="alternate" href="LSHDG.pdf" title="PDF version" type="application/pdf" />
<link rel="alternate" href="LSHDG.epub" title="ePub version" type="application/epub+zip" />
<link rel="alternate" href="LSHDG.mobi" title="Mobipocket version" type="application/x-mobipocket-ebook" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/fonts.css">
<link rel="stylesheet" href="../dcommon/css/foundation.css">
<link rel="stylesheet" href="../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">12/20</span> <!-- End Header -->
<div id="LSHDG1010" class="chapter"><a id="CIHJGCGI"></a>
<h1 class="chapter"><span class="secnum">9</span> Defining Report Sets</h1>
<p>This section contains information on the following topics:</p>
<ul>
<li>
<p><a href="#BABCCEFC">About Report Sets</a></p>
</li>
<li>
<p><a href="#BABGFFGA">How to Work on a Report Set</a></p>
</li>
<li>
<p><a href="#CIHGGDDA">Creating Overlay Templates</a></p>
</li>
<li>
<p><a href="#CIHGBCHF">Creating a Report Set</a></p>
</li>
<li>
<p><a href="#BEICGEEG">Using the Report Set Properties Screen</a></p>
</li>
<li>
<p><a href="#BABFAEEG">Using the Report Set Structure View</a></p>
</li>
<li>
<p><a href="#BABCHCAC">Creating and Setting Report Set Parameters</a></p>
</li>
<li>
<p><a href="#BABIHIGD">Defining Report Set Entries</a></p>
</li>
<li>
<p><a href="#BABHBABA">Defining Programs to Generate Reports</a></p>
</li>
<li>
<p><a href="#BABCDJHA">Installing Report Sets</a></p>
</li>
<li>
<p><a href="#BABFFEHH">Validating Report Set Definitions and Outputs</a></p>
</li>
<li>
<p><a href="#CIHGJJFG">About Report Set Planned Outputs</a></p>
</li>
<li>
<p><a href="#BABEIABF">Modifying Report Sets</a></p>
</li>
</ul>
<div id="LSHDG1011" class="figure">
<p class="titleinfigure"><a id="BABGBCBA"></a>Figure 9-1 Process of Creating a Report Set Definition and Instance</p>
<img width="625" height="337" src="img/report_set_process.gif" alt="Description of Figure 9-1 follows" /><br />
<a id="sthref55" href="img_text/report_set_process.htm">Description of ''Figure 9-1 Process of Creating a Report Set Definition and Instance''</a><br />
<br /></div>
<!-- class="figure" -->
<a id="BABCCEFC"></a>
<div id="LSHDG1012" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">About Report Sets</h2>
<p>A Report Set provides a way to organize, manage, and run a set of reports together under version control. You can define numbered chapters, sections within the chapters, and any number of levels of subsections, with reports and/or narrative text at any level. When you choose to use postprocessing, the Oracle Life Sciences Data Hub (Oracle LSH) generates a table of contents and hyperlinks to each report.</p>
<p>Each report in a Report Set is generated by the execution of a Program instance whose corresponding Planned Output is assigned to the particular chapter, section, or subsection (all of which are called Report Set Entries) where the report appears in the final output. A single Program instance can generate multiple reports, each of which can be assigned to a different Report Set Entry. Reports can take the form of tables, listings, figures, or text, depending on the technology you use to create them and how you define them.</p>
<p>You can include Program instances of different technology types&mdash;including SAS, Oracle Reports, and PL/SQL&mdash;in the same Report Set. When you execute the Report Set, the system sends each Program instance to the appropriate engine for execution and integrates the results.</p>
<p><a id="LSHDG1013"></a><span class="subhead3">Postprocessing&nbsp;</span>Oracle LSH includes Oracle XML Publisher for use in an optional postprocessing step for Report Sets. During postprocessing, after the system has generated all the reports, Oracle XML Publisher generates a single PDF file for the entire Report Set (or breaks the Report Set into volumes if you choose), paginates and concatenates the individual reports, numbers the pages, and creates PDF bookmarks.</p>
<p>To use the postprocessing feature you must create reusable Overlay Template RTF files that include publishing specifications such as multilayered page layouts, graphics, and watermarks for each type of page in your Report Set (for example, the table of contents, listings, and figures, in landscape and portrait orientations). You upload these RTF template files to an Overlay Template File, which is part of an Overlay Template definition in Oracle LSH.</p>
<p>You can execute a Report Set without the postprocessing step to save time while you are developing and testing the Report Set and its Program instances. In that case the system generates an output for the Planned Output assigned to each included Report Set Entry, with the file type specified for the Planned Output. The Post-Processing Parameter called Post Process controls whether or not postprocessing is included in a particular execution.</p>
<p>If you plan to use postprocessing you must define the file type of all Planned Outputs assigned to Report Set Entries as PDF.</p>
<p><a id="LSHDG1014"></a><span class="subhead3">Parameter Value Propagation&nbsp;</span>You can set up value sharing among Parameters to promote consistency and reduce the work required to submit the Report Set for execution.</p>
<p>For example, many Program instances may have a Parameter for Study Name or Study ID. You can define a Report Set Parameter to collect the Study Name or ID at runtime at the top level of the Report Set, and set up value sharing so that the person submitting the Report Set for execution enters the value for Study Name or ID once, and the system automatically propagates that value to the Study Name or ID Parameter of all the Program instances you specify.</p>
<p>You can also use an output Parameter value of one Program to populate the value of an input Parameter of another Program. See <a href="vars.htm#BCFEAHGA">"Setting Up Parameter Value Propagation"</a> for further information.</p>
<p><a id="BABEIAEG"></a><a id="LSHDG1015"></a><span class="subhead3">Concurrent Editing&nbsp;</span>Multiple people can simultaneously modify a single Report Set. The first person to modify it must check out the definition, but while it is checked out, anyone else with Modify privileges on the Report Set definition can modify it.</p>
<p>However, only one person can work on any one section at a time; see <a href="#BABEBHFD">"Concurrent Editing of Report Sets"</a> for further information.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Shared editing works only in a Report Set instance that is contained directly in a Work Area. It does not work in a Report Set instance that is contained in a Workflow.</div>
<p><a id="LSHDG1016"></a><span class="subhead3">Execution&nbsp;</span>Oracle LSH does not necessarily execute a Report Set in the order displayed in the Structure view, but takes dependencies into account. If you have set up value propagation from the output Parameter of one Program to the input Parameter of another Program, the system executes the Program that produces the output value before the Program that takes the input value.</p>
<p>The log file the system generates each time it runs a Report Set contains detailed information about each stage of the Report Set execution.</p>
<p>Report Set submissions include two jobs, both of which are displayed on your My Home page. The first job starts the second, which is a batch process.</p>
<p><a id="LSHDG1017"></a><span class="subhead3">Partial Execution&nbsp;</span>Using the Execution Setup for the Report Set as a whole you can submit the whole Report Set or specify one or more Report Set Entries to execute. You can also select a single Report Set Entry in the Structure view and submit it with or without Report Set Entries under it in the Report Set hierarchy. You can also submit a single Program and the system will produce the Report Set Entries to which it is assigned.</p>
<p><a id="LSHDG1018"></a><span class="subhead3">Validation of Individual Report Set Entries&nbsp;</span>You can validate different sections of the Report Set at different times. See <a href="#BABFFEHH">"Validating Report Set Definitions and Outputs"</a> for details.</p>
<p><a id="LSHDG1019"></a><span class="subhead3">Reports on Report Set Definitions and Instances&nbsp;</span>From the <span class="bold">Actions</span> drop-down list, you can generate reports that provide information on a Report Set definition or instance; see <a href="obj_reports.htm#CIHJIAJE">Chapter 14, "System Reports"</a> for information.</p>
</div>
<!-- class="sect1" -->
<a id="BABGFFGA"></a>
<div id="LSHDG1021" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">How to Work on a Report Set</h2>
<p>Report Sets can be very large and complex, and many people can work on them at the same time; see <a href="#BABEIAEG">"Concurrent Editing"</a>. To make Report Set development work best, use the following general process:</p>
<ol>
<li>
<p><span class="bold">Create overlay template files and Overlay Template Definitions</span>. To produce a unified PDF output of your Report Set you must create RTF templates, upload them to Oracle LSH, and define Overlay Template Definitions (OTDs) in Oracle LSH. You must define OTDs before you can set values for the predefined Overlay Template Parameters to specify which template(s) to use for each Report Set Entry, or branch, of the Report Set.</p>
<p>You can use the same OTDs and OTD files for many Report Sets. See <a href="#CIHGGDDA">"Creating Overlay Templates"</a> and <a href="#BABBCIAA">"Setting Overlay Template Parameter Values"</a> for further information.</p>
</li>
<li>
<p><span class="bold">Create the Report Set</span>. Create the Report Set definition and an instance of it, then click <span class="bold">Update</span> to set the Strict and Unique numbering properties for the Report Set. See <a href="#CIHGBCHF">"Creating a Report Set"</a> for further information.</p>
</li>
<li>
<p><span class="bold">Set Parameter values at the top Report Set level</span>. Set values at the top Report Set level for predefined Overlay Template and Post-Processing Parameters. This ensures that all Report Set Entries have values for these Parameters in the Report Set instance and in the Execution Setup. <a href="#BABCHCAC">"Creating and Setting Report Set Parameters"</a>.</p>
</li>
<li>
<p><span class="bold">Create Report Set Parameters (optional)</span>. To make the Report Set easier to submit and to help ensure data consistency, you may want to define one or more Parameters at the Report Set level. For example, if all the reports in a Report Set are about the same study, and the Programs that create the reports have an input Parameter to identify the study, you may want to define a Study Parameter at the Report Set level and share its value with each Program's Study Parameter. The Report Set Study Parameter appears at the top of the Report Set's Execution Setup where the user can easily find it and set it once for the whole Report Set. See <a href="vars.htm#BCFEAHGA">"Setting Up Parameter Value Propagation"</a> for further information.</p>
</li>
<li>
<p><span class="bold">Define the Report Set structure</span>. A Report Set has top-level chapters that contain subchapters that can in turn contain any number of levels of sections and subsections. All of these are called Report Set Entries. You must define a Report Set's structure by defining hierarchical Report Set Entries from the top down; see <a href="#BABFAEEG">"Using the Report Set Structure View"</a>.</p>
</li>
<li>
<p><span class="bold">Develop, test, and validate Report Set Entries and Programs</span>. Develop the Programs that generate the Report Set's reports. Assign each Program Planned Output to the Report Set Entry (chapter, section, or subsection) where it should appear. Add pre- and post-report narratives as necessary to Report Set Entries. Adjust the settings for Post-Processing and Overlay Template Parameters as necessary. Test and validate Programs, Report Set Entries, and report outputs according to your company's standards. See <a href="#BABIHIGD">"Defining Report Set Entries"</a> and <a href="#BABFFEHH">"Validating Report Set Definitions and Outputs"</a> for further information.</p>
</li>
</ol>
<p class="subhead2"><a id="BABEBHFD"></a><a id="LSHDG1022"></a>Concurrent Editing of Report Sets</p>
<p>More than one person can work on a Report Set at the same time. After one person checks out the Report Set, any other user with Modify privileges on the Report Set can also work on it. In order to protect each person's work, the system enforces the following behavior:</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you try to make a change that is not allowed because of the activity of another person, you get an error message with the username of the person whose work is conflicting with yours. In most cases you can click Apply again immediately and the system applies your change.</div>
<ul>
<li>
<p><span class="bold">Report Set Structure</span>. Many people can create, move, copy, modify, or remove Report Set Entries as long as they are all working in different branches of the Report Set.</p>
<p>One person cannot move, reorder, copy, or remove a Report Set Entry that is a parent in the same hierarchy (branch) of a Report Set Entry that another person is currently modifying.</p>
</li>
<li>
<p><span class="bold">Report Set Entry</span>. Only one person at a time can modify a particular Report Set Entry's properties. Different people can modify different Report Set Entries in different branches of the Report Set hierarchy.</p>
</li>
<li>
<p><span class="bold">Program Instance</span>. Only one person at a time can modify a particular Program instance contained in the Report Set. Different people can modify different Program instances.</p>
</li>
<li>
<p><span class="bold">Install Program Instance</span>. One person can install a single Program instance in the Report Set at any time without impacting the work of other people on the Report Set. Installing a Program instance implicitly checks in the Report Set definition and instance, installs the Report Set instance, and checks out the Report Set definition and instance again.</p>
</li>
<li>
<p><span class="bold">Install Report Set</span>. Installing a Report Set from a Work Area is permitted but not recommended during concurrent editing. Oracle recommends installing a Program instance from the Report Set Structure view as a means of installing the Report Set structure during concurrent editing.</p>
<p>During installation of a Program in a Report Set, other people can continue to work on the Report Set definition through the instance, including making changes to the Report Set structure and Programs. However, noone can work on the Report Set instance during installation of the Report Set in a Work Area. This includes mapping Program instances. See <a href="#BABCDJHA">"Installing Report Sets"</a> for further information.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the person running the Work Area installation has Checkin Administrator privileges, all Program instances are checked in without warning, including those checked out by other users.</div>
</li>
<li>
<p><span class="bold">Execute Report Set</span>. One person can execute a Report Set or a portion of a Report Set without impacting the work of other people.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="CIHGGDDA"></a>
<div id="LSHDG1024" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating Overlay Templates</h2>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABBGJBH">About Overlay Templates</a></p>
</li>
<li>
<p><a href="#BABFEDCF">Creating Template Files</a></p>
</li>
<li>
<p><a href="#BABJJIIA">Creating an Overlay Template Definition</a></p>
</li>
<li>
<p><a href="#BABDCBBI">Creating an Overlay Template File Definition</a></p>
</li>
</ul>
<img width="439" height="193" src="img/otd_process.gif" alt="Description of otd_process.gif follows" /><br />
<a id="sthref56" href="img_text/otd_process.htm">Description of the illustration ''otd_process.gif''</a><br />
<br />
<a id="BABBGJBH"></a>
<div id="LSHDG1025" class="sect2">
<h3 class="sect2">About Overlay Templates</h3>
<p>Oracle LSH's postprocessing feature uses Oracle XML Publisher to generate a single- or multi-volume PDF-format Report Set with a unified Table of Contents from the individual PDF reports and narratives generated by the first stage of Report Set execution.</p>
<p>To use the postprocessing feature, you must design and create RTF templates that can include graphics, watermarks, hyperlinks, text variables, and the font styles and sizes you prefer.</p>
<p>You create template files in Microsoft Word or a similar tool, save them as RTF files, and upload each one to an Overlay Template Definition (OTD) File definition in an OTD. In the OTD File definition you specify the file's orientation, paper size, language, and rotation.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For information on creating template files, see the <span class="italic">Oracle XML Publisher User's Guide</span>, which is available on My Oracle Support and the Oracle Technology Network.</div>
<p><a id="LSHDG1026"></a><span class="subhead3">Templates Applied at Runtime&nbsp;</span>For the Table of Contents and Narratives, Oracle LSH uses the runtime values of the Post-Processing Parameters Paper Size, Language, and Orientation to determine which template files associated with the OTD to apply. To determine which template files to use for the actual reports, or content, Oracle LSH uses Paper Size, Language, and the orientation of the actual PDF report output.</p>
<p>Therefore you can, for example, create a single OTD with template files for both A4 and US letter-sized paper, and use different values for the Paper Size Post-Processing Parameter to print it out on A4 paper in Europe or Japan and letter-sized paper in the US or Canada.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In Oracle LSH Release 2.4.8 the only language supported is US English.</div>
<p><a id="LSHDG1027"></a><span class="subhead3">Overlay&nbsp;</span>You can create multiple template files in the same Overlay Template definition with the same values for Paper Size, Orientation, and Language. In this case, Oracle XML Publisher uses all of them, overlaying them on top of each other on each page. For example, you can create one template file with a rotation of 90 degrees to print the Report Set title and your company logo vertically along the side margin, and another template file for the main body of the page with a rotation of 0. Because both files have the same orientation and paper size, the system applies both; see <a href="#BABFBGJB">Figure 9-2, "Example with Banner Template File"</a>.</p>
</div>
<!-- class="sect2" -->
<a id="BABFEDCF"></a>
<div id="LSHDG1028" class="sect2">
<h3 class="sect2">Creating Template Files</h3>
<p>Oracle recommends creating a single OTD containing all the template files you may need to postprocess a single Report Set. Decide which options represented by Post-Processing Parameters you want to support&mdash;A4 and/or US Letter-sized paper, landscape and/or portrait orientation&mdash; and create the template files necessary to support them in a single OTD. The values for the Post-Processing Parameters can be set in the Report Set definition, in the Execution Setup definition, or by a user submitting the Report Set for execution. Oracle LSH selects the template(s) to use for each section of the Report Set based on these Parameter values at runtime.</p>
<p><a id="LSHDG1029"></a><span class="subhead3">OTD File Types&nbsp;</span>You must create at least one RTF template file for each OTD File type that you plan to use: Coversheet, Table of Contents, Content, Narrative, Narrative Content, Page Numbering, TOC Overlay, and In Progress; see <a href="#BABDCBBI">"Creating an Overlay Template File Definition"</a> for a description of each file type.</p>
<p><a id="LSHDG1030"></a><span class="subhead3">Text Variables&nbsp;</span>You can use text variables in your template files to substitute an actual value from the Report Set at runtime. These variables are sensitive to context within the Report Set. For example, if you use the text variable <code dir="ltr">&lt;?xdo66:title?&gt;</code> it displays the title of the Report Set when used in the Coversheet or Table of Contents template, and it displays the Report Set Entry title when displayed in a Narrative or Content template for a chapter or section.</p>
<p>You can also use text variables to display the runtime value of user-defined Parameters; for example, <code dir="ltr">&lt;?study?&gt;</code>. The variable displays the value of the Study Parameter appropriate for the context: Report Set, Report Set Entry, or Program.</p>
<p><a id="LSHDG1994"></a><span class="subhead3">Footers&nbsp;</span>You can include a footer in any of the OTDs if required. Enter the following variable in the OTD RTF's footer: <code dir="ltr">&lt;?/xdobb:item/footer?&gt;</code>.</p>
</div>
<!-- class="sect2" -->
<a id="BABJJIIA"></a>
<div id="LSHDG1032" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Creating an Overlay Template Definition</h3>
<p>You create Overlay Template definitions directly in an Application Area or Domain library, not a Work Area. They do not have instances.</p>
<p>To create an Overlay Template, do the following:</p>
<ol>
<li>
<p>In a Domain or Application Area, click <span class="bold">Manage Definitions</span>.</p>
</li>
<li>
<p>From the <span class="bold">Create</span> drop-down list, select <span class="bold">Overlay Template</span>. The Create Overlay Template screen opens.</p>
</li>
<li>
<p>Enter a <span class="bold">Name</span> for the Overlay Template.</p>
</li>
<li>
<p>Enter a <span class="bold">Description</span> for the Overlay Template.</p>
</li>
<li>
<p>From the <span class="bold">Default Paper Size</span> drop-down list, select one of the following:</p>
<ul>
<li>
<p><span class="bold">A4</span>. The standard paper size used in Europe and Japan: 21 x 29.5 cm.</p>
</li>
<li>
<p><span class="bold">US Letter</span>. The standard paper size used in North America: 8.5 x 11 inches.</p>
</li>
</ul>
<p>This value serves as the default value for the corresponding Parameter of each Overlay Template File. You can change the value for any Overlay Template File definition as necessary.</p>
<div class="infobox-note">
<p class="notep1">Tip:</p>
If you have some template files for A4 paper and others for US Letter-sized paper, you can set this value to A4 first, for example, upload all the template files for A4 paper, then change the default to US Letter and upload all the template files for US Letter-sized paper.</div>
</li>
<li>
<p>From the <span class="bold">Default Language</span> drop-down list, select a language. In Oracle LSH Release 2.4.8 the only option is US English.</p>
<p>This value serves as the default value for the corresponding Parameter of each Overlay Template File in the Overlay Template.</p>
</li>
<li>
<p>Classify the Overlay Template definition; see <a href="deftasks.htm#CHDJADAD">"Classifying Objects and Outputs"</a> for further information.</p>
</li>
<li>
<p>Click <span class="bold">Apply</span>. The Overlay Template Definition Properties screen appears.</p>
</li>
<li>
<p>Click <span class="bold">Add</span> to add Overlay Template File definitions (see <a href="#BABDCBBI">"Creating an Overlay Template File Definition"</a> below).</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABDCBBI"></a>
<div id="LSHDG1034" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Creating an Overlay Template File Definition</h3>
<p>An Overlay Template Definition (OTD) File is an Oracle LSH definitional object contained in an OTD. It consists of an uploaded XML template&mdash;an RTF file that contains formatting design information (see <a href="#BABFEDCF">"Creating Template Files"</a>) and a set of Parameters that serve as labels.</p>
<p>To create an Overlay Template Definition File, do the following:</p>
<ol>
<li>
<p>In the Overlay Template Definition Properties screen, click <span class="bold">Add</span> in the Overlay Template Definition Files section. The Overlay Template Definition File screen opens.</p>
</li>
<li>
<p>Click the <span class="bold">Browse</span> button to find the RTF template file you want to upload. The system opens a standard Browse window.</p>
</li>
<li>
<p>Navigate to the location of the file you want to upload, select the file, and click <span class="bold">Open</span>.</p>
</li>
<li>
<p>Select a <span class="bold">Type</span>:</p>
<ul>
<li>
<p><span class="bold">Content</span>. Files of type Content determine the appearance of the actual Report Set reports. This is the default Type.</p>
</li>
<li>
<p><span class="bold">Coversheet</span>. Files of type Coversheet determine the appearance of the Report Set's title page.</p>
</li>
<li>
<p><a id="BABBJAIG"></a><span class="bold">In Progress</span>. Create one OTD file of type In Progress. When the system cannot execute a Report Set Entry because its associated Program instance is checked out or fails execution, the system uses the In Progress OTD file as a placeholder for the unexecuted report.</p>
</li>
<li>
<p><span class="bold">Narrative</span>. Files of type Narrative are used to display the pre- or post- narratives for the report.</p>
</li>
<li>
<p><span class="bold">Narrative Content</span>. Create and upload a PDF file (usually blank) for Oracle XML Publisher to use to format the text content for the narrative specified in the Report Set definition.</p>
</li>
<li>
<p><span class="bold">Page Numbering</span>. Oracle XML Publisher requires a special OTD file for page numbering because it must generate a page number dynamically for each page. There is an XML tag that for the position and format of the page number. See the Oracle XML Publisher documentation for further information.</p>
<p>To produce a Report Set with page numbers, you must define and upload one OTD file of the Page Numbering type for each paper size/orientation combination represented in this Overlay Template Definition.</p>
</li>
<li>
<p><span class="bold">Table of Contents</span>. Files of type Table of Contents determine the appearance of the Report Set's table of contents.</p>
</li>
<li>
<p><span class="bold">TOC Overlay</span>. If necessary, use this type to provide a header and footer or other overlay formatting for the table of contents.</p>
</li>
</ul>
</li>
<li>
<p>Select a printing <span class="bold">Orientation</span>:</p>
<ul>
<li>
<p><span class="bold">Portrait</span>. Portrait files must be printed vertically.</p>
</li>
<li>
<p><span class="bold">Landscape</span>. Landscape files must be printed horizontally.</p>
</li>
</ul>
<p>The default value is Portrait.</p>
</li>
<li>
<p>Select a <span class="bold">Paper Size</span>. The default value comes from the Paper Size Parameter of the Overlay Template definition.</p>
<ul>
<li>
<p><span class="bold">A4</span>. The standard paper size used in Europe and Japan: 21 x 29.5 cm.</p>
</li>
<li>
<p><span class="bold">US Letter</span>. The standard paper size used in North America: 8.5 x 11 inches.</p>
</li>
</ul>
</li>
<li>
<p>Select a <span class="bold">Language</span>. In the Oracle LSH Release 2.4.8 there is only one option: <span class="bold">US English</span>.</p>
</li>
<li>
<p>Select a <span class="bold">Rotation</span> (in number of degrees):</p>
<img width="251" height="55" src="img/a.gif" alt="Description of a.gif follows" /><br />
<a id="sthref57" href="img_text/a.htm">Description of the illustration ''a.gif''</a><br />
<br />
<p>For example, you can use a rotation of 90 or 270 degrees to create a banner along one side of a page. The figure below shows the direction in which text appears when you define two template files with a partite orientation and the same paper size. The Content template has a rotation of zero (0) and the banner template file has a rotation of 90.</p>
<div id="LSHDG1035" class="figure">
<p class="titleinfigure"><a id="BABFBGJB"></a>Figure 9-2 Example with Banner Template File</p>
<img width="328" height="184" src="img/xml_banner.gif" alt="Banner Template File" /><br /></div>
<!-- class="figure" -->
<div class="infobox-note">
<p class="notep1">Tip:</p>
Do not change the setting for Orientation (for example, from landscape to portrait) simply because you are using a 90- or 270-degree rotation. The rotated file should have the same Orientation setting as the other files with which it is to be used. Further information is available in the <span class="italic">Oracle XML Publisher User's Guide</span>.</div>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHGBCHF"></a>
<div id="LSHDG1037" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating a Report Set</h2>
<p>When you create a Report Set in a Work Area, you are actually creating an instance of a Report Set definition.</p>
<p>To create a new Report Set instance:</p>
<ol>
<li>
<p>In a Work Area, select <span class="bold">Report Set</span> from the <span class="bold">Add</span> drop-down list.</p>
</li>
<li>
<p>Click <span class="bold">Go</span>.</p>
<p>The system displays the Create Report Set screen.</p>
</li>
<li>
<p>Choose one of the following options:</p>
<ul>
<li>
<p><span class="bold">Create a new Report Set definition and instance</span>. Choose this option if no Report Set definition exists that can meet your needs, either as it is or with some modification.</p>
</li>
<li>
<p><span class="bold">Create an instance from an existing Report Set definition</span>. Choose this option if a Report Set definition already exists that meets your needs.</p>
<p>If you can adapt an existing Report Set definition to make it fit your needs, first copy it into the current Application Area, then choose this option and select the copied definition. See <a href="deftasks.htm#CHDEHHAG">"Finding an Appropriate Definition"</a> and <a href="deftasks.htm#CHDJIJBH">"Reusing Existing Definitions"</a> for further information.</p>
</li>
</ul>
</li>
<li>
<p>Depending on your choice, follow one of the following sets of instructions:</p>
<ul>
<li>
<p><a href="#BABDCDED">Creating a New Report Set Definition and Instance</a></p>
</li>
<li>
<p><a href="#BABEBCBI">Creating an Instance of an Existing Report Set Definition</a></p>
</li>
</ul>
</li>
</ol>
<a id="BABDCDED"></a>
<div id="LSHDG1038" class="sect2">
<h3 class="sect2">Creating a New Report Set Definition and Instance</h3>
<p>When you select <span class="bold">Create a new Report Set definition and instance</span> in the Create Report Set screen, additional fields appear.</p>
<ol>
<li>
<p>Enter values in the following fields:</p>
<ul>
<li>
<p><span class="bold">Name</span>. See <a href="deftasks.htm#CHDBIJAH">"Naming Objects"</a>. The system uses the Name internally. It must be unique within the container.</p>
</li>
<li>
<p><span class="bold">Title</span>. The system enters the value you entered for the Name as the default value. You can change it. It is the Title, not the Name, that appears on the Report Set output. The Title is not required to be unique.</p>
</li>
<li>
<p><span class="bold">Description</span>. See <a href="deftasks.htm#CHDIHBBC">"Creating and Using Object Descriptions"</a>.</p>
</li>
</ul>
</li>
<li>
<p>In the <span class="bold">Classification</span> section, select the following for both the definition and the instance:</p>
<ul>
<li>
<p><span class="bold">Subtype</span>. Select a subtype according to your company's policies.</p>
</li>
<li>
<p><span class="bold">Classification Values</span>. See <a href="deftasks.htm#CHDJADAD">"Classifying Objects and Outputs"</a> for instructions.</p>
</li>
</ul>
</li>
<li>
<p>Click <span class="bold">Apply</span> to save your work and continue defining the Report Set.</p>
<p>The system opens the Properties screen for the new Report Set instance with the Report Set definition checked out. The Report Set properties <span class="bold">Strict Numbering</span> and <span class="bold">Unique Numbering</span> are both set to <span class="bold">Yes</span> by default. If you want to change their values, you must go to the Report Set definition and change them there; click on the Definition hyperlink in the Instance Properties section.</p>
<p>The properties are:</p>
<ul>
<li>
<p><span class="bold">Strict Numbering</span>. If set to <span class="bold">Yes</span>, Report Set Entries must be numbered sequentially, with no gaps. The system automatically generates sequential numbers. This is the default setting.</p>
<p>If set to <span class="bold">No</span>, gaps are allowed in the numbering of Report Set Entries. The system generates sequential numbers by default, but you can override the entry number and if you remove a Report Set Entry the system does not renumber the remaining Report Set Entries to close the gap (however, you can do this manually).</p>
</li>
<li>
<p><span class="bold">Unique Numbering</span>. If set to <span class="bold">Yes</span>, each Report Set Entry must have a number that is different from the number of all other Report Set Entries in the same Report Set. The system automatically generates unique numbers.</p>
<p>If set to <span class="bold">No</span>, unique numbers are not required. The system generates unique numbers by default, but you can override the entry number to create duplicate numbers.</p>
</li>
</ul>
<div id="LSHDG1039" class="tblformal">
<p class="titleintable"><a id="sthref58"></a><a id="sthref59"></a>Table 9-1 Possible Combinations or Strict and Unique Numbering Settings</p>
<table class="cellalignment81" title="Possible Combinations or Strict and Unique Numbering Settings" summary="Numbering examples with each unique and strict combination." dir="ltr">
<thead>
<tr class="cellalignment71">
<th class="cellalignment82" id="r1c1-t9">Unique Numbering</th>
<th class="cellalignment82" id="r1c2-t9">Strict Numbering</th>
<th class="cellalignment82" id="r1c3-t9">Automatic Renumbering Possible?</th>
<th class="cellalignment82" id="r1c4-t9">Valid Example</th>
<th class="cellalignment82" id="r1c5-t9">Invalid Example</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment71">
<td class="cellalignment77" id="r2c1-t9" headers="r1c1-t9">
<p>Y</p>
</td>
<td class="cellalignment77" headers="r2c1-t9 r1c2-t9">
<p>Y</p>
</td>
<td class="cellalignment77" headers="r2c1-t9 r1c3-t9">
<p>Yes</p>
</td>
<td class="cellalignment77" headers="r2c1-t9 r1c4-t9">
<p>14.2.1 Table</p>
<p>14.2.2 Listing</p>
<p>14.2.3 Table</p>
</td>
<td class="cellalignment77" headers="r2c1-t9 r1c5-t9">
<p>14.2.1 Table</p>
<p>14.2.1 Listing</p>
<p>14.2.3 Table</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r3c1-t9" headers="r1c1-t9">
<p>Y</p>
</td>
<td class="cellalignment77" headers="r3c1-t9 r1c2-t9">
<p>N</p>
</td>
<td class="cellalignment77" headers="r3c1-t9 r1c3-t9">
<p>No</p>
</td>
<td class="cellalignment77" headers="r3c1-t9 r1c4-t9">
<p>14.2.1 Table</p>
<p>14.2.3 Listing</p>
<p>14.2.6 Table</p>
</td>
<td class="cellalignment77" headers="r3c1-t9 r1c5-t9">
<p>14.2.1 Table</p>
<p>14.2.1 Listing</p>
<p>14.2.3 Table</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r4c1-t9" headers="r1c1-t9">
<p>N</p>
</td>
<td class="cellalignment77" headers="r4c1-t9 r1c2-t9">
<p>Y</p>
</td>
<td class="cellalignment77" headers="r4c1-t9 r1c3-t9">
<p>No</p>
</td>
<td class="cellalignment77" headers="r4c1-t9 r1c4-t9">
<p>14.2.1 Table</p>
<p>14.2.1 Listing</p>
<p>14.2.2 Table</p>
</td>
<td class="cellalignment77" headers="r4c1-t9 r1c5-t9">
<p>14.2.1 Table</p>
<p>14.2.1 Listing</p>
<p>14.2.3 Table</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r5c1-t9" headers="r1c1-t9">
<p>N</p>
</td>
<td class="cellalignment77" headers="r5c1-t9 r1c2-t9">
<p>N</p>
</td>
<td class="cellalignment77" headers="r5c1-t9 r1c3-t9">
<p>No</p>
</td>
<td class="cellalignment77" headers="r5c1-t9 r1c4-t9">
<p>No restriction</p>
</td>
<td class="cellalignment77" headers="r5c1-t9 r1c5-t9">
<p>No restriction</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABEBCBI"></a>
<div id="LSHDG1041" class="sect2">
<h3 class="sect2">Creating an Instance of an Existing Report Set Definition</h3>
<p>Use this option if there is an existing Report Set that you can use exactly as it is. If you use an existing Report Set as a definition source, you can use all the Report Set Entries, Program instances, Planned Outputs, Execution Templates, Post-Processing and Overlay Template Parameter values, and Parameter value propagation that are already defined. See <a href="deftasks.htm#CHDGAIDJ">"Creating an Instance of an Existing Definition"</a> for instructions.</p>
<p>After you have created the Report Set instance, you must map the Table Descriptors of all the Program instances contained in it to Table instances; see <a href="deftasks.htm#CIHDCCDA">"Mapping Table Descriptors to Table Instances"</a> for instructions.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BEICGEEG"></a>
<div id="LSHDG1043" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Using the Report Set Properties Screen</h2>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BEICFGGB">Instance Properties</a></p>
</li>
<li>
<p><a href="#BEICCHGB">Definition Properties</a></p>
</li>
<li>
<p><a href="#BEIEHCFC">Buttons</a></p>
</li>
<li>
<p><a href="deftasks.htm#CIHDAIFF">Using the Actions Drop-Down List</a></p>
</li>
<li>
<p>Subtabs:</p>
<ul>
<li>
<p><span class="bold">Entries</span>. See <a href="#BABIHIGD">"Defining Report Set Entries"</a>.</p>
</li>
<li>
<p><span class="bold">Parameters</span>. See <a href="#BABEFFGI">"Creating Parameters for Sharing Values within the Report Set"</a>.</p>
</li>
<li>
<p><span class="bold">Post-Processing</span>. See <a href="#CIHFHIIG">"Setting Post-Processing Parameter Values"</a>.</p>
</li>
<li>
<p><span class="bold">Overlay Templates</span>. See <a href="#BABBCIAA">"Setting Overlay Template Parameter Values"</a>.</p>
</li>
<li>
<p><span class="bold">Planned Outputs</span>. See <a href="#CIHGJJFG">"About Report Set Planned Outputs"</a>.</p>
</li>
<li>
<p><span class="bold">Jobs</span>. See <a href="deftasks.htm#BEIIGDGF">"Viewing Jobs"</a>.</p>
</li>
</ul>
</li>
</ul>
<p>See also <a href="#BABGBCBA">Figure 9-1, "Process of Creating a Report Set Definition and Instance"</a>.</p>
<p>See <a href="#BABEIABF">"Modifying Report Sets"</a> for information on modifying Report Sets.</p>
<p>If you are working in a Work Area, you see the properties of both the Report Set instance and the Report Set definition it references. If you are working directly on the definition in an Application Area or Domain, you see only the properties of the definition.</p>
<a id="BEICFGGB"></a>
<div id="LSHDG1044" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Instance Properties</h3>
<p>You can see the following instance properties:</p>
<p><a id="LSHDG1045"></a><span class="subhead3">Name&nbsp;</span>You can click <span class="bold">Update</span> and modify the name. See <a href="deftasks.htm#CHDBIJAH">"Naming Objects"</a> for further information.</p>
<p><a id="LSHDG1046"></a><span class="subhead3">Description&nbsp;</span>You can click <span class="bold">Update</span> and modify the description. See <a href="deftasks.htm#CHDIHBBC">"Creating and Using Object Descriptions"</a> for further information.</p>
<p><a id="BEIBJFEE"></a><a id="LSHDG1047"></a><span class="subhead3">Definition&nbsp;</span>This field specifies the Report Set definition to which this Report Set instance points. For information on modifying this field, see <a href="#BEIEIDIF">"Definition Source"</a>.</p>
<p>To upgrade to a new version of the same definition, use the <span class="bold">Upgrade to Latest</span> button. See <a href="deftasks.htm#BEIFAIDB">"Upgrading to a Different Definition Version from an Instance"</a>.</p>
<p><a id="LSHDG1048"></a><span class="subhead3">Version&nbsp;</span>This field displays the current version number of the Report Set instance.</p>
<p><a id="LSHDG1049"></a><span class="subhead3">Version Label&nbsp;</span>This field displays the version label, if any, for the current Report Set instance version.</p>
<p>For further information on object versions, see <a href="deftasks.htm#BEIBHCFH">"Understanding Object Versions and Checkin/Checkout"</a>.</p>
<p><a id="LSHDG1050"></a><span class="subhead3">Validation Status&nbsp;</span>This field displays the current validation status of the Report Set instance. If you have the necessary privileges, you can change the validation status by selecting <span class="bold">Validation Supporting Information</span> from the <span class="bold">Actions</span> drop-down list. See <a href="deftasks.htm#BABGFFBG">"Validating Objects and Outputs"</a> for further information.</p>
<p><a id="LSHDG1051"></a><span class="subhead3">Status&nbsp;</span>This field displays the install status of the Report Set: installable or noninstallable. See <a href="status.htm#BABHIEJG">Appendix A, "Installation Requirements for Each Object Type"</a>.</p>
</div>
<!-- class="sect2" -->
<a id="BEICCHGB"></a>
<div id="LSHDG1052" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Definition Properties</h3>
<p><a id="LSHDG1053"></a><span class="subhead3">Checked Out Status&nbsp;</span>This field displays the status of the definition: either Checked Out or Checked In. You must check out the definition to modify the Report Set structure or to add, remove, assign, or reassign Program instances. You can change Table Descriptor mappings without checking out the definition. See <a href="#BABIBFEJ">"Mapping"</a> and <a href="deftasks.htm#BEIBHCFH">"Understanding Object Versions and Checkin/Checkout"</a> for further information.</p>
<p><a id="LSHDG1054"></a><span class="subhead3">Latest Version&nbsp;</span>If set to <span class="bold">Yes</span>, this Report Set instance is pointing to the latest version of the Report Set definition. If set to <span class="bold">No</span>, this Report Set instance is pointing to an older version of the Report Set definition.</p>
<p><a id="LSHDG1055"></a><span class="subhead3">View Latest&nbsp;</span>You can see this button only if the current Report Set instance does not point to the latest definition version. Click this button to view the latest Report Set definition.</p>
<p><a id="LSHDG1056"></a><span class="subhead3">Upgrade to Latest&nbsp;</span>This button is grayed out if the current Report Set instance already points to the latest Report Set definition. Click this button to upgrade the current Report Set instance to the latest definition version. For more information on upgrading instances, see <a href="deftasks.htm#BEIHAHEE">"Upgrading Object Instances to a New Definition Version"</a>.</p>
<p><a id="LSHDG1057"></a><span class="subhead3">Checked Out By&nbsp;</span>This field displays the username of the person who has the Report Set definition checked out. See <a href="deftasks.htm#BEIBHCFH">"Understanding Object Versions and Checkin/Checkout"</a> for further information.</p>
<p><a id="LSHDG1058"></a><span class="subhead3">Version Label&nbsp;</span>This field displays the version label, if any, for this definition version.</p>
<p><a id="LSHDG1059"></a><span class="subhead3">Strict Numbering&nbsp;</span>If set to <span class="bold">Yes</span>, numbers must be sequential, with no gaps. If set to <span class="bold">No</span>, gaps are allowed. You must be in the Report Set definition in its Application Area or Domain to change this value.</p>
<p><a id="LSHDG1060"></a><span class="subhead3">Unique Numbering&nbsp;</span>If set to <span class="bold">Yes</span>, numbers must be unique within the parent. If set to <span class="bold">No</span>, duplicate numbers are allowed. You must be in the Report Set definition in its Application Area or Domain to change this value.</p>
<p><a id="LSHDG1061"></a><span class="subhead3">Title&nbsp;</span>This field displays the Report Set definition title.</p>
<p><a id="LSHDG1062"></a><span class="subhead3">Validation Status&nbsp;</span>This field displays the current validation status of the Report Set definition. If you are working directly in the definition in an Application Area or Domain and you have the necessary privileges, you can change the validation status by selecting <span class="bold">Validation Supporting Information</span> from the <span class="bold">Actions</span> drop-down list. If you are working in an instance of the Report Set in a Work Area, and you want to change the validation status of the definition, you must go to the definition. See <a href="deftasks.htm#BABGFFBG">"Validating Objects and Outputs"</a> for further information.</p>
<p><a id="LSHDG1063"></a><span class="subhead3">Status&nbsp;</span>This field displays the installable status of the Report Set: Installable or Non Installable. See <a href="status.htm#BABHIEJG">Appendix A, "Installation Requirements for Each Object Type"</a>.</p>
</div>
<!-- class="sect2" -->
<a id="BEIEHCFC"></a>
<div id="LSHDG1064" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Buttons</h3>
<p>From a Report Set instance in a Work Area, you can use the following buttons:</p>
<p><a id="LSHDG1065"></a><span class="subhead3">Submit&nbsp;</span>Click <span class="bold">Submit</span> to run the Report Set instance. Before you can run the Report Set, you must install it and create an Execution Setup for it (select <span class="bold">Execution Setups</span> from the <span class="bold">Actions</span> drop-down list).</p>
<p><a id="LSHDG1066"></a><span class="subhead3">Update&nbsp;</span>Click <span class="bold">Update</span> to modify the Report Set instance properties. See <a href="#BEIHEIIH">"Modifying Report Set Instance Properties"</a>.</p>
<p><a id="LSHDG1067"></a><span class="subhead3">Check In/Out and Uncheck&nbsp;</span>Click these buttons to check out, check in, or uncheck the Report Set definition. Different buttons are displayed in the Report Set Definition Properties section depending on the checked out status and whether or not you are the person who has the definition checked out. If someone else has checked out the definition, you cannot check it in or uncheck it. The username of the person who has checked it out is displayed. See <a href="deftasks.htm#BEIBHCFH">"Understanding Object Versions and Checkin/Checkout"</a>.</p>
<p><a id="LSHDG1068"></a><span class="subhead3">View Latest/Upgrade to Latest&nbsp;</span>If the definition is not the latest version, you can click to view the latest version and upgrade to the latest version if you want to. See <a href="deftasks.htm#BEIFAIDB">"Upgrading to a Different Definition Version from an Instance"</a>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABFAEEG"></a>
<div id="LSHDG1070" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Using the Report Set Structure View</h2>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABCHEIC">Navigating to the Report Set Structure View</a></p>
</li>
<li>
<p><a href="#BABDADGA">Building and Modifying the Report Set</a></p>
</li>
</ul>
<a id="BABCHEIC"></a>
<div id="LSHDG1071" class="sect2">
<h3 class="sect2">Navigating to the Report Set Structure View</h3>
<p>To view, build, or modify a Report Set's structure, do the following:</p>
<ol>
<li>
<p>Navigate to the Report Set instance in its Work Area in the <span class="bold">Applications</span> tab.</p>
</li>
<li>
<p>Click the Report Set name's hyperlink. The Report Set opens.</p>
</li>
<li>
<p>If it is not already showing, select <span class="bold">Structure</span> from the <span class="bold">View</span> drop-down list.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABDADGA"></a>
<div id="LSHDG1072" class="sect2">
<h3 class="sect2">Building and Modifying the Report Set</h3>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABIHBBC">Modifying the Report Set</a></p>
</li>
<li>
<p><a href="#BABGIABG">Report Set Entry Information Displayed</a></p>
</li>
</ul>
<p>The Report Set's Structure view, with <span class="bold">Structure</span> selected in the <span class="bold">View</span> drop-down, shows the structure of the Report Set in a display similar to a table of contents.</p>
<p>Each chapter, section, and subsection is called a Report Set Entry. You can define any number of levels of Report Set Entries. You must define Report Set Entries from the top level down, creating each new Report Set Entry (RSE) as a child of an existing Report Set Entry or of the Report Set itself.</p>
<a id="BABIHBBC"></a>
<div id="LSHDG1073" class="sect3">
<h4 class="sect3">Modifying the Report Set</h4>
<p>In the Report Set Structure view you can build and modify the Report Set structure and do many other things as follows:</p>
<ol>
<li>
<p>Select the Report Set itself or a Report Set Entry (RSE).</p>
</li>
<li>
<p>From the <span class="bold">Select and</span> drop-down list, select the action you want to perform on the selected Report Set or Report Set Entry.</p>
<p>Use <span class="bold">Add RSE</span>, <span class="bold">Remove RSE</span>, <span class="bold">Reorder</span>, <span class="bold">Copy</span>, and <span class="bold">Move</span> to create and modify the Report Set structure. Details for all options are given below.</p>
</li>
<li>
<p>Click <span class="bold">Go</span>.</p>
</li>
</ol>
<p>The following options are available:</p>
<a id="BEIIDCEI"></a>
<div id="LSHDG1074" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4">Add Program</h5>
<p>The Create Program screen opens and you can either create (add) an instance of an existing Program definition or create a new Program definition and instance. If you add an instance of an existing Program that has at least one primary Planned Output, the system assigns the first primary Planned Output to the selected Report Set Entry. You can change the assignment if necessary by using the <a href="#BABJJGDC">Assign Planned Output</a> option. See <a href="#BABHBABA">"Defining Programs to Generate Reports"</a> for information about Programs inside Report Sets and <a href="progs.htm#CHDFGBAI">"Creating a Program"</a> for general instructions.</p>
</div>
<!-- class="sect4" -->
<div id="LSHDG1075" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref60"></a>
<h5 class="sect4">Add RSE</h5>
<p>The Add Entries screen opens and you can add one or more Report Set Entries under (at the child level of) the one you selected or modify existing Entries; see <a href="#BABJEJEI">"Creating Multiple Report Set Entries"</a> for instructions. If the selected Report Set or Report Set Entry already contains one or more child Report Set Entries, the system adds the new ones below the existing ones.</p>
<p>After you have added Report Set Entries you can define additional details; see <a href="#BABJFJIJ">"Setting Report Set Entry Properties"</a> and assign a Planned Output to the Report Set Entry; see<a href="#BABJJGDC">"Assign Planned Output"</a> below.</p>
</div>
<!-- class="sect4" -->
<a id="BABJJGDC"></a>
<div id="LSHDG1076" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4">Assign Planned Output</h5>
<p>The Assign Program Instance and Planned Output screen opens. Do the following:</p>
<ol>
<li>
<p>Click the Search icon to search for a Program already assigned to the Report Set.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Only checked out Program instances can be assigned to a Report Set Entry.</div>
</li>
<li>
<p>Select the Planned Output you want to assign.</p>
</li>
<li>
<p>Click <span class="bold">Select</span>.</p>
</li>
</ol>
<p>If you select a Report Set Entry that already has a Planned Output assigned, you can change the assignment by selecting a different one.</p>
</div>
<!-- class="sect4" -->
<div id="LSHDG1077" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref61"></a>
<h5 class="sect4">Copy</h5>
<p>You can copy a Report Set Entry and its child Report Set Entries into another location in the same Report Set or a different one. The Copy operation includes all child Report Set Entries and the Execution Setup fragment for the selected Report Set Entry and all its children (if such Execution Setup fragments exist). You have the option to copy Program instances assigned to Report Set Entries being copied.</p>
<ol>
<li>
<p>Select the Report Set Entry you want to copy and then select <span class="bold">Copy</span> from the drop-down list.</p>
</li>
<li>
<p>Click <span class="bold">Go</span>. A message appears asking if you want to include Program instances assigned to the Report Set Entry (and its children).</p>
<ul>
<li>
<p>Click <span class="bold">No</span> if you do not want to copy Program instance(s).</p>
</li>
<li>
<p>Click <span class="bold">Yes</span> to copy Program instance(s).</p>
</li>
</ul>
</li>
<li>
<p>Select the Report Set into which you want to copy the Report Set Entry; see <a href="deftasks.htm#CIHDDEDD">"Pasting Objects"</a>.</p>
</li>
</ol>
<p>If you choose to copy Program instances, the system copies their Execution Setups and Table Descriptor mappings and maintains the existing links to Program definitions and their Planned Outputs.</p>
<p>If there is already a Program with the same name in the target Report Set, the system creates the copy with the name <code dir="ltr">Copy Of</code> <code dir="ltr"><span class="codeinlineitalic">Program_Name</span></code>. When you copy a Report Set Entry into the same Report Set, this always happens. If you prefer to have a single instance of the Program in the Report Set, so that the Program is executed only once during Report Set execution, do one of the following:</p>
<ul>
<li>
<p>Remove the copied Program from the Report Set and assign the original Program to the Report Set Entry.</p>
</li>
<li>
<p>Unassign the Program before you do the Copy operation and reassign it afterward.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot select the Report Set's top level and then select <span class="bold">Copy</span> from the drop-down list. You can copy a whole Report Set from the Applications screen but not from the Report Set screen.</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
To copy multiple Report Set Entries at the same level, click the hyperlink of the parent Report Set Entry, then select and copy the Report Set Entries.</div>
</div>
<!-- class="sect4" -->
<div id="LSHDG1078" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref62"></a>
<h5 class="sect4">Default Execution Setup</h5>
<p>View and modify the default Execution Setup for selected Report Set instance or Report Set Entry and its child Report Set Entries; see <a href="deftasks.htm#CIHGGGFH">"Report Set and Workflow Execution Setups"</a>.</p>
<p>If no Execution Setups are defined, the system generates a default Execution Setup and opens it.</p>
</div>
<!-- class="sect4" -->
<div id="LSHDG1079" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref63"></a>
<h5 class="sect4">Execution Setup</h5>
<p>The system displays all Execution Setups defined for the selected Report Set instance. The list is the same regardless of which Report Set Entry you select; you see the Execution Setups for the Report Set instance as a whole. You can then click on the hyperlink of any Execution Setup and navigate to any Report Set Entry to modify its settings.</p>
<p>If no Execution Setups are defined, the Create Execution Setup screen opens and you can create one.</p>
</div>
<!-- class="sect4" -->
<div id="LSHDG1080" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref64"></a>
<h5 class="sect4">Install Program</h5>
<p>Install the Program instance assigned to the selected Report Set Entry. If the Program instance is not installable you get an error message.</p>
<p>When you install a Program instance from the Report Set Structure view, the system also checks in the Report Set definition and instance and installs the Report Set instance, then checks the Report Set definition and instance back out. You can use this functionality to install changes to the Report Set structure even if no Program instances need to be installed.</p>
</div>
<!-- class="sect4" -->
<div id="LSHDG1081" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref65"></a>
<h5 class="sect4">Map</h5>
<p>You can map or remap (using Automatic Mapping by Name) the Table Descriptors of all Programs assigned to the selected Report Set Entry and all its child Report Set Entries at the same time. If you select the top level of the Report Set you can map the Table Descriptors of all Programs in the Report Set. For further information, see <a href="deftasks.htm#CIHJJIIA">"Automatic Mapping by Name"</a>. For other mapping options, see <a href="#BABIBFEJ">"Mapping"</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The Report Set instance is not installable until all the Table Descriptors of all the Program instances it contains are mapped.</div>
</div>
<!-- class="sect4" -->
<div id="LSHDG1082" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref66"></a>
<h5 class="sect4">Move</h5>
<p>You can move a Report Set Entry into another location in the same Report Set or a different one. The Move operation includes all child Report Set Entries and the Execution Setup fragment for the selected Report Set Entry and all its children.</p>
<p>If you move a Report Set Entry within the same Report Set, the system maintains the existing links to Program instances and their Planned Outputs.</p>
<p>If you move the Report Set Entry to a different Report Set, a message appears asking if you want to include Program instances assigned to the Report Set Entry and its children. If you choose to include Program instances, the system copies all Program instances assigned to the Report Set Entries you are moving, and their Execution Setup fragments (if any) and recreates the Program instance and Planned Output assignments in the new location.</p>
<p>See <a href="deftasks.htm#CIHDDEDD">"Pasting Objects"</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Program instances are never removed implicitly from a Report Set, even if all the Report Set Entries to which they are assigned are moved or removed.</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot select the Report Set's top level and then select <span class="bold">Move</span> from the drop-down list. You can move a whole Report Set from the Applications screen but not from the Report Set screen.</div>
</div>
<!-- class="sect4" -->
<div id="LSHDG1995" class="sect4"><a id="sthref67"></a>
<h5 class="sect4">Quick Submit</h5>
<p>The system submits the selected item&mdash;either a Report Set Entry and all its children, the entire Report Set, or a Program instance&mdash;using the default Execution Setup with its default values, without opening the Execution Setup screen. The system upgrades the Execution Setup if necessary and validates it. The submission fails if:</p>
<ul>
<li>
<p>The Execution Setup cannot be upgraded; for example, if another user is currently modifying the default Execution Setup</p>
</li>
<li>
<p>The Execution Setup is invalid; for example, the Parameters that apply to the portion of the Report Set being submitted have invalid values</p>
</li>
</ul>
<p>In the Job Execution section of the My Home page you see two jobs. A temporary job starts the actual report generation job.</p>
</div>
<!-- class="sect4" -->
<div id="LSHDG1083" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref68"></a>
<h5 class="sect4">Remove RSE</h5>
<p>The system deletes the Report Set Entry you select. If you select a Report Set Entry that contains other Report Set Entries, the system removes them also.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you try to remove a Report Set Entry to which other Report Set Entries have links, you receive a warning. If you choose to continue, the system removes the selected Report Set Entry and all links between it and other Report Set Entries. The system does not remove any Program instances assigned to any Report Set Entries being removed.</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot select the Report Set's top level and then select <span class="bold">Remove</span> from the drop-down list. You can remove a Report Set from the Applications screen but not from the Report Set screen.</div>
</div>
<!-- class="sect4" -->
<div id="LSHDG1084" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref69"></a>
<h5 class="sect4">Reorder</h5>
<p>Select the Report Set or Report Set Entry whose child Report Set Entries you want to reorder; see <a href="deftasks.htm#CHDBHCJC">"Reordering and Renumbering Objects"</a>.</p>
</div>
<!-- class="sect4" -->
<div id="LSHDG1085" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref70"></a>
<h5 class="sect4">Submit</h5>
<p>The system displays the Submit screen based on the default Execution Setup for the selected Report Set instance. If you select a Report Set Entry and then Submit, the Report Set Entry you selected, and all its children, are selected for inclusion in the execution. You must define an Execution Setup and install the Report Set instance before you can submit any part of it for execution.</p>
</div>
<!-- class="sect4" -->
<div id="LSHDG1086" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref71"></a>
<h5 class="sect4">View All Outputs</h5>
<p>The system displays a list of all outputs produced for the selected Report Set or Report Set Entry. The system displays the following information for each output: Output Validation Status, Creation TS (Timestamp), Creation User (the username of the person who ran the job that created the output), Job ID, Program Instance Name, Program Instance Version, Path to Executable (Program) Instance, and Title.</p>
<p>In addition, there is an icon in the View column that you can click to view the output itself.</p>
</div>
<!-- class="sect4" -->
<div id="LSHDG1087" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref72"></a>
<h5 class="sect4">View Output</h5>
<p>The system displays output properties information about the current output produced for the selected Report Set or Report Set Entry, including: title, file name, job ID, execution status, description, validation status, execution user (the username of the person who executed the job), job start time, blinding status, and primary output (yes/no).</p>
<p>To view the output itself, click <span class="bold">View File</span>.</p>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="BABGIABG"></a>
<div id="LSHDG1088" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Report Set Entry Information Displayed</h4>
<p>The Report Set Structure view displays the following information about each Report Set Entry and the Report Set as a whole:</p>
<ul>
<li>
<p><a id="BABDHDFA"></a><span class="bold">Full Title</span> is the Report Set Entry's concatenated title that includes its Entry Number Prefix, Parent Number, Delimiter, Entry Number, Entry Number Suffix, and Title, in that order.</p>
</li>
<li>
<p><span class="bold">VS (Validation Status)</span> refers to the standard validation status of the Report Set Entry; either Development (Dev), Quality Control (QC), or Production (Prod).</p>
</li>
<li>
<p><span class="bold">Summary Output VS (Validation Status)</span> is the calculated validation status derived from outputs' and child Report Set Entries' validation statuses. The possible values are: Null, Not Assigned, N/A (Not Applicable), Development, Quality Control, or Production; see <a href="#BABJEIHI">"Summary Output Validation Status"</a>.</p>
</li>
<li>
<p><span class="bold">Output Creation TS (Timestamp)</span>. The system displays the timestamp of the creation of the current output.</p>
</li>
<li>
<p><span class="bold">Narrative</span>. If the checkbox is checked, there is a Pre- and/or Post-Narrative assigned to the Report Set Entry.</p>
</li>
<li>
<p><span class="bold">Assigned Program Instance</span>. If a Program instance is assigned to the Report Set Entry, the system displays a link to its Properties screen.</p>
</li>
<li>
<p><span class="bold">Program Instance VS (Validation Status)</span>. If a Program instance is assigned to the Report Set Entry, the system displays its validation status. You can click the hyperlink to change its validation status if you have the required privileges.</p>
</li>
<li>
<p><span class="bold">Filename Reference</span> of the Program's Source Code.</p>
</li>
<li>
<p><span class="bold">Assigned Planned Output</span>. If a Planned Output of the assigned Program instance is assigned to the Report Set Entry, the system displays its name.</p>
</li>
<li>
<p><span class="bold">Definition Checked Out By</span> displays the username of the person who has checked out the Program definition, if it is checked out.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABCHCAC"></a>
<div id="LSHDG1090" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating and Setting Report Set Parameters</h2>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABBCIAA">Setting Overlay Template Parameter Values</a></p>
</li>
<li>
<p><a href="#CIHFHIIG">Setting Post-Processing Parameter Values</a></p>
</li>
<li>
<p><a href="#BABHIAHH">Setting Program Parameter Values</a></p>
</li>
<li>
<p><a href="#BABEFFGI">Creating Parameters for Sharing Values within the Report Set</a></p>
</li>
</ul>
<p>Report Sets have two sets of predefined Parameters&mdash;Overlay Template Parameters and Post-Processing Parameters&mdash;that determine how Oracle XML Publishes post-processes the Report Set, using templates, to generate a single- or multi-volume PDF output. The Parameters that are part of the Programs in a Report Set are used to execute the Programs during Report Set execution. You can define Parameters directly at the Report Set or Report Set Entry and share their values to Program Parameters to simplify Report Set submission.</p>
<p>When you create an Execution Setup for a Report Set or Report Set Entry, the system copies all these Parameters into the Execution Setup. You can modify them in the Execution Setup without affecting the Parameters in the Report Set or Program definitions.</p>
<a id="BABBCIAA"></a>
<div id="LSHDG1091" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Setting Overlay Template Parameter Values</h3>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABHADBB">Overlay Template Parameters</a></p>
</li>
<li>
<p><a href="#BABFJACB">Setting Overlay Template Parameters</a></p>
</li>
<li>
<p><a href="#BABBGFDB">OTD Parameter Value Sharing</a></p>
</li>
</ul>
<p>Oracle LSH Overlay Template definitions (OTDs) are designed to include all the template files you need to postprocess a Report Set; see <a href="#CIHGGDDA">"Creating Overlay Templates"</a>. If you define your OTDs that way and this particular Report Set has no unusual characteristics, you can simply enter the name of the OTD in the Default OTD Parameter at the Report Set level and that value is propagated to all other OTD Parameters throughout the Report Set.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The value is displayed only where it is explicitly set.</div>
<p>However, if you need to use a different OTD for certain Report Set Entries or for certain Narratives or report outputs, you can do so. See <a href="#BABFJACB">"Setting Overlay Template Parameters"</a>.</p>
<a id="BABHADBB"></a>
<div id="LSHDG1092" class="sect3">
<h4 class="sect3">Overlay Template Parameters</h4>
<p>The Report Set itself and Report Set Entries have a similar set of Overlay Template Parameters:</p>
<p>The following Parameters apply to the Report Set as a whole only:</p>
<ul>
<li>
<p><span class="bold">Coversheet OTD</span> Oracle XML Publisher applies the specified OTD to the Report Set's coversheet.</p>
</li>
<li>
<p><span class="bold">TOC (Table of Contents) OTD</span> Oracle XML Publisher applies the specified OTD to the Report Set's table of contents.</p>
</li>
</ul>
<p>The following Parameters apply to each Report Set Entry and the Report Set itself:</p>
<ul>
<li>
<p><span class="bold">Default OTD</span>. If the value for any other OTD Parameter at the top Report Set level is null, XML Publisher uses the Default OTD value for that Parameter.</p>
</li>
<li>
<p><span class="bold">Pre-Narrative OTD</span>. Oracle XML Publisher applies the specified OTD to the Report Set Entry's Pre Narrative (text displayed on a page before the report), if any.</p>
</li>
<li>
<p><span class="bold">Content OTD</span>. Oracle XML Publisher applies the specified OTD to the Report Set Entry's generated report output, if any.</p>
</li>
<li>
<p><span class="bold">Post-Narrative OTD</span>. Oracle XML Publisher applies the specified OTD to the Report Set Entry's Post Narrative (text displayed on a page after the report), if any.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABFJACB"></a>
<div id="LSHDG1093" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Setting Overlay Template Parameters</h4>
<p>Normally you need to set a value only for the Default OTD Parameter at the Report Set level. Its value is automatically propagated to all other OTD Parameters unless you explicitly specify a different value. OTDs are designed to accommodate all possible needs in a Report Set; see <a href="#CIHGGDDA">"Creating Overlay Templates"</a>.</p>
<p>To set an explicit value for an Overlay Template Parameter, do the following:</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must create at least one Overlay Template definition (OTD) before you can enter a value for the Default OTD Parameter. See <a href="#CIHGGDDA">"Creating Overlay Templates"</a> for information.</div>
<ol>
<li>
<p>In the <span class="bold">Default Value</span> column for an Overlay Template Parameter, click the plus (<span class="bold">+</span>) sign. A Search and Select screen opens.</p>
</li>
<li>
<p>Select the name of the Domain that contains the Overlay Template definition (OTD) that you want to use.</p>
</li>
<li>
<p>If the OTD is not contained directly in that Domain, drill down to the subdomain or Application Area that contains the OTD.</p>
</li>
<li>
<p>If you want to search for a specific OTD name or version label, select either Name or Version Label from the <span class="bold">Search By</span> drop-down list and enter the value.</p>
</li>
<li>
<p>Click <span class="bold">Go</span>. The system displays the OTDs in the location you specified. If you selected a name or version label it displays only OTDs with that name or version label.</p>
</li>
<li>
<p>Select the OTD you want.</p>
</li>
<li>
<p>Click <span class="bold">Apply</span>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When you enter a value for an OTD Parameter, all the OTD Parameters of the same name below it in the Report Set hierarchy inherit that value unless you explicitly set a different value. Therefore if, for example, you are using one OTD throughout the Report Set with a few exceptions, you must set the Parameters of the same name in the immediate child Report Set Entries to the default OTD; see <a href="#BABBGFDB">"OTD Parameter Value Sharing"</a>.</div>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BABBGFDB"></a>
<div id="LSHDG1095" class="sect3">
<h4 class="sect3">OTD Parameter Value Sharing</h4>
<p>OTD Parameters are predefined with automatic value sharing by name. That is, by default each OTD Parameter gets its value from the next higher OTD Parameter in the Report Set hierarchy with the same name. In addition, if there is no OTD Parameter with the same name higher in the Report Set hierarchy that has an explicitly defined value, it gets its value from the Default OTD Parameter at its own level. (The Default OTD Parameter for each Report Set Entry gets its value using automatic sharing by name from the next Default OTD Parameter above it in the Report Set hierarchy that has an explicitly defined value.)</p>
<p>If you do not want to use the default shared value you can explicitly set any OTD Parameter in any Report Set Entry. The corresponding Parameter of each of its child (and grandchild, and so on) Report Set Entries (whether existing or subsequently defined) gets the new value. If you want the child and grandchild Report Set Entries to use the old value, you must change the value of the corresponding Parameter for each of the immediate children of the Report Set Entry you changed.</p>
<p>All Overlay Template Parameters must have a value or Report Set postprocessing will not work. Therefore at the top level of the Report Set you must do one of the following if you want to use postprocessing:</p>
<ul>
<li>
<p>Specify a value for the Default OTD Parameter only. In this case, the other OTD Parameters at the Report Set level get their value from the Default OTD Parameter.</p>
</li>
<li>
<p>Specify a value for the Default OTD Parameter and, if you want any of the other OTD Parameters to have a different value, specify a value for those Parameters.</p>
</li>
<li>
<p>Specify a value for every OTD Parameter except the Default OTD Parameter.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIHFHIIG"></a>
<div id="LSHDG1096" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Setting Post-Processing Parameter Values</h3>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABCADDA">Post-Processing Parameters at the Report Set Level Only</a></p>
</li>
<li>
<p><a href="#BABCCBFC">Post-Processing Parameters at the Report Set and Report Set Entry Levels</a></p>
</li>
</ul>
<p>Oracle XML Publisher uses the values of a predefined set of Post-Processing Parameters to control various aspects of generating a unified PDF output for the Report Set. There is a similar set of Parameters at the Report Set level and at the Report Set Entry level. Report Set Entry Post-Processing Parameters receive their default value from the corresponding Parameter of their immediate parent Report Set or Report Set Entry.</p>
<p>If you set these Parameter values at the Report Set level, the values you set become the default settings for the corresponding Parameters in the Report Set Entries below. For the Post-Processing Parameters that exist only in Report Set Entries, you can set the values in the top-level Report Set Entries for the same effect.</p>
<p>You can override the value for any Post-Processing Parameter for any Report Set Entry at any time. Changing a value for a Report Set Entry also changes the value of the same Parameter for any existing and future child Report Set Entries of that Report Set Entry.</p>
<a id="BABCADDA"></a>
<div id="LSHDG1097" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Post-Processing Parameters at the Report Set Level Only</h4>
<p>The following Post-Processing Parameters appear at the Report Set level only:</p>
<p><a id="LSHDG1098"></a><span class="subhead3">Post Process&nbsp;</span>If set to <span class="bold">Yes</span>, the Report Set uses Oracle XML Publishing postprocessing to apply overlay templates and generate one or more volumes of concatenated reports in PDF format.</p>
<p>If set to <span class="bold">No</span>, the system disregards all other settings in the Post-Processing and Overlay Templates tabs. The system generates a table of contents and hyperlinks to every report, each of which is a separate file with the type specified for the corresponding Planned Output. This mode requires less time for execution and may be useful during development.</p>
<p><a id="LSHDG1099"></a><span class="subhead3">Single Volume Output Name&nbsp;</span>If you enter a value here, the system ignores all Volume Breaks and produces a single postprocessed output, using this value as both the output name and title. The system also uses the value for the output filename, with the extension .pdf.</p>
<p><a id="LSHDG1100"></a><span class="subhead3">Start Page Number&nbsp;</span>Enter a number (normally <code dir="ltr">1</code>). If your Report Set is really a continuation of another Report Set that you have defined separately, you can enter the number of pages in the first Report Set (plus 1) as the value for the Starting Page Parameter, to create continuous page numbering for both Report Sets.</p>
<p>Oracle XML Publisher can display page numbers as "1 of <span class="italic">x</span>," "2 of <span class="italic">x</span>," and so on. If you enter a Starting Page value of 400, Oracle XML Publisher displays page one as "400 of (<span class="italic">x</span>+400)" where <span class="italic">x</span> is the number of pages in the current Report Set.</p>
<p><a id="LSHDG1101"></a><span class="subhead3">Coversheet&nbsp;</span>If set to <span class="bold">Yes</span>, Oracle XML Publisher incorporates the coversheet in the PDF output. The default setting is <span class="bold">Yes</span>.</p>
<p><a id="LSHDG1102"></a><span class="subhead3">Coversheet Orientation&nbsp;</span>Select either Portrait (vertical) or Landscape (horizontal) for the orientation default value for the coversheet Overlay Template Definition. The default value is Portrait. See <a href="#CIHGGDDA">"Creating Overlay Templates"</a> for more information.</p>
<p><a id="LSHDG1103"></a><span class="subhead3">TOC&nbsp;</span>If set to <span class="bold">Yes</span>, Oracle XML Publisher generates a table of contents (TOC) for the Report Set. If set to <span class="bold">No</span>, Oracle XML Publisher does not generate a table of contents.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If TOC is set to <span class="bold">Yes</span> for a Report Set that contains multiple volumes, the system generates a single TOC in a separate PDF file.</div>
<p><a id="LSHDG1104"></a><span class="subhead3">TOC Orientation&nbsp;</span>Select either Portrait (vertical) or Landscape (horizontal) for the orientation default value for the table of contents Overlay Template Definition. The default value is Portrait. See <a href="#CIHGGDDA">"Creating Overlay Templates"</a> for more information.</p>
</div>
<!-- class="sect3" -->
<a id="BABCCBFC"></a>
<div id="LSHDG1105" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Post-Processing Parameters at the Report Set and Report Set Entry Levels</h4>
<p>The following Post-Processing Parameters appear at the Report Set Entry level and, unless otherwise noted, at the Report Set level:</p>
<p><a id="LSHDG1106"></a><span class="subhead3">Paper Size&nbsp;</span>Select either A4 (European and Japanese standard) or US Letter (North American standard).</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The system uses this setting to determine which OTD Files to use from the specified OTD. Setting this Parameter does not guarantee that your reports will print correctly for the size of paper. That depends on the OTD file itself and on the output of the Program.</div>
<p><a id="LSHDG1107"></a><span class="subhead3">Language&nbsp;</span>In the Oracle LSH Release 2.4.8 there is only one option: English.</p>
<p><a id="LSHDG1108"></a><span class="subhead3">Calculated Title&nbsp;</span>(Report Set Entry level only) Use this Parameter to receive a generated title for the Report Set Entry from a Program output Parameter whose value is propagated to <code dir="ltr">calculated_title</code>. The default value is null. If this value is null at runtime, the system uses the Report Set Entry's defined Full Title as the displayed title. See <a href="#BABJJBIC">"Passing Report Set Entry Values to and from Programs"</a>.</p>
<p><a id="LSHDG1109"></a><span class="subhead3">Shared Title&nbsp;</span>(Report Set Entry level only) Use the <code dir="ltr">shared_title</code> Parameter to pass the Title properties values to the Program instance, so that the Program instance can generate a different calculated title (the Program Title). See <a href="#BABFEDJC">"Setting Title Properties"</a> and <a href="#BABJJBIC">"Passing Report Set Entry Values to and from Programs"</a>.</p>
<p><a id="LSHDG1110"></a><span class="subhead3">Watermark Text&nbsp;</span>Enter the text, if any, that you want in the watermark. (A watermark is text printed across the page so that it appears to be beneath the content of the report.) If the Overlay Template Definition file you specify does not have a watermark defined, the system ignores this value.</p>
<p>If you want the watermark to display the current validation status (Development, Quality Control, or Production) of the Report Set or Report Set Entry, enter: <code dir="ltr">&lt;VS&gt;</code></p>
<p>To substitute your own terminology for any of the three validation statuses, enter three pipes (|) after the VS, each followed by the value you want to display when the validation status is Development, Quality Control, or Production, respectively. For example:</p>
<ul>
<li>
<p>To display "Dev," "QC," or "Final," enter: <code dir="ltr">&lt;VS|Dev|QC|Final&gt;</code></p>
</li>
<li>
<p>To display no watermark if the validation status is Production, but "Dev" or "QC" if the validation status is Development or Quality Control, enter: &lt;VS|Dev|QC|&gt;</p>
</li>
</ul>
<p>You can also have a string of fixed text on either side of the validation status or its equivalent, or only fixed text.</p>
<ul>
<li>
<p>To display <span class="italic">y</span> text before the validation status and <span class="italic">x</span> text after it, enter: <code dir="ltr">y &lt;VS|Dev|QC|Final&gt; x</code></p>
</li>
<li>
<p>To display the string xyz by itself, enter: <code dir="ltr">'xyz'</code></p>
</li>
</ul>
<div id="LSHDG1111" class="tblformal">
<p class="titleintable"><a id="sthref73"></a><a id="sthref74"></a>Table 9-2 Examples of Validation Status-Based Watermark Values</p>
<table class="cellalignment81" title="Examples of Validation Status-Based Watermark Values" summary="described in the surrounding text" dir="ltr">
<thead>
<tr class="cellalignment71">
<th class="cellalignment82" id="r1c1-t23">Parameter Value</th>
<th class="cellalignment82" id="r1c2-t23">Development</th>
<th class="cellalignment82" id="r1c3-t23">Quality Control</th>
<th class="cellalignment82" id="r1c4-t23">Production</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment71">
<td class="cellalignment77" id="r2c1-t23" headers="r1c1-t23">
<p>&lt;VS&gt;</p>
</td>
<td class="cellalignment77" headers="r2c1-t23 r1c2-t23">
<p>Development</p>
</td>
<td class="cellalignment77" headers="r2c1-t23 r1c3-t23">
<p>Quality Control</p>
</td>
<td class="cellalignment77" headers="r2c1-t23 r1c4-t23">
<p>Production</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r3c1-t23" headers="r1c1-t23">
<p>&lt;VS|Dev|QC|Final&gt;</p>
</td>
<td class="cellalignment77" headers="r3c1-t23 r1c2-t23">
<p>Dev</p>
</td>
<td class="cellalignment77" headers="r3c1-t23 r1c3-t23">
<p>QC</p>
</td>
<td class="cellalignment77" headers="r3c1-t23 r1c4-t23">
<p>Final</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r4c1-t23" headers="r1c1-t23">
<p>&lt;VS|Dev|QC|&gt;</p>
</td>
<td class="cellalignment77" headers="r4c1-t23 r1c2-t23">
<p>Dev</p>
</td>
<td class="cellalignment77" headers="r4c1-t23 r1c3-t23">
<p>QC</p>
</td>
<td class="cellalignment77" headers="r4c1-t23 r1c4-t23">
<p>&lt;none&gt;</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r5c1-t23" headers="r1c1-t23">
<p>y &lt; VS|Dev|QC|Final&gt; x</p>
</td>
<td class="cellalignment77" headers="r5c1-t23 r1c2-t23">
<p>y Dev x</p>
</td>
<td class="cellalignment77" headers="r5c1-t23 r1c3-t23">
<p>y QC x</p>
</td>
<td class="cellalignment77" headers="r5c1-t23 r1c4-t23">
<p>y Final x</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p><a id="LSHDG1112"></a><span class="subhead3">Pre-Narrative Orientation&nbsp;</span>Select either Portrait (vertical) or Landscape (horizontal) for the orientation default value for Overlay Template Definitions for narratives that appear before or instead of reports. The default value is Portrait. See <a href="#CIHGGDDA">"Creating Overlay Templates"</a> for more information.</p>
<p><a id="LSHDG1113"></a><span class="subhead3">Post-Narrative Orientation&nbsp;</span>Select either Portrait (vertical) or Landscape (horizontal) for the orientation default value for Overlay Template Definitions for narratives that appear after reports. The default value is Portrait. See <a href="#CIHGGDDA">"Creating Overlay Templates"</a> for more information.</p>
<p><a id="LSHDG1114"></a><span class="subhead3">Hyperlink1...5 Target&nbsp;</span>(Report Set Entry level only) You can set up your Overlay Template to display hyperlinks to other Report Set Entries. If your Overlay Template is set up for this, and you want to create a hyperlink to another Report Set Entry from the current one, click the Search icon and select its Full Title from the list of values.</p>
<p>You can set up the Overlay Template to display up to five (5) of these hyperlinks to other Report Set Entries, using the subsequently numbered Hlink<span class="italic">x</span> Target Parameters.</p>
<p><a id="LSHDG1115"></a><span class="subhead3">Hyperlink1...5 Text&nbsp;</span>(Report Set Entry level only) Enter the text to be displayed for each hyperlink. The default text is the Full Title of the Report Set Entry you selected for the corresponding HLink<span class="italic">x</span> Target Parameter.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABHIAHH"></a>
<div id="LSHDG1117" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Setting Program Parameter Values</h3>
<p>When you submit the Execution Setup for a Report Set or a Report Set Entry, the system executes the associated Program(s) with the Parameter values supplied in the Execution Setup. You can set Program Parameter values and attributes in the Program definition or the Execution Setup definition.</p>
</div>
<!-- class="sect2" -->
<a id="BABEFFGI"></a>
<div id="LSHDG1118" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Creating Parameters for Sharing Values within the Report Set</h3>
<p>You can define your own Parameters at the Report Set level (or at the Report Set Entry level) for the purpose of sharing a single value to similar Parameters in Program instances throughout the Report Set (or in a particular Report Set Entry and its child Report Set Entries), and set up automatic value propagation from those Parameters.</p>
<p>For example, if the Report Set should run on data for a single study, and many Program instances included in the Report Set have a Parameter for Study Name or Study ID, define a Report Set-level Parameter Study Name and/or Study ID and set up automatic value propagation. Then the person submitting the Report Set for execution only needs to enter the study name or ID a single time.</p>
<p>See <a href="vars.htm#BCFEAHGA">"Setting Up Parameter Value Propagation"</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Do not use spaces in the name of any Parameter you create for use in a Report Set. This will cause an error in postprocessing because the Parameter name becomes an HTML tag, where spaces are not allowed.</div>
<p>If a Parameter value should be the same throughout the Report Set, define the Parameter at the Report Set level.</p>
<p>If the Parameter value should be the same in only a single chapter of the Report Set, you can define the Parameter in the chapter-level Report Set Entry. If you set the Parameter to Required and the Report Set Entry Parameter does not have a value at runtime, the <span class="bold">Ready</span> flag is set to <span class="bold">No</span>, alerting the user to set a value. Alternatively, define the source Parameter at the top level the Report Set and name it in such a way that it is clear that it is used just in a particular Report Set Entry.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If a Program Parameter gets its value from another Parameter in a Report Set, at runtime the system gets the value from the source Parameter even if the source Parameter is not included in the submission (because it is in a Report Set Entry that is not included). You can then enter a value manually. If the source Parameter is required and does not have a value, you get an error message.</div>
<p>To create a Parameter for value sharing, do the following:</p>
<ol>
<li>
<p>Go to the <span class="bold">Parameters</span> subtab of the Report Set or Report Set Entry.</p>
</li>
<li>
<p>Click <span class="bold">Add</span>.</p>
</li>
<li>
<p>Create a Parameter, following instructions in <a href="vars.htm#BACHGJBH">"Defining Parameters"</a>.</p>
</li>
<li>
<p>If you want to pass the value of this Parameter to all others in the Report Set (or Report Set Entry) with the same name, do the following:</p>
<ol>
<li>
<p>In the Parameter Instance screen, click <span class="bold">Update</span>.</p>
</li>
<li>
<p>Under Value Propagation, select <span class="bold">Automatically pass value(s) to parameters with the same name</span>.</p>
</li>
<li>
<p>Click <span class="bold">Apply</span>.</p>
</li>
</ol>
</li>
</ol>
<p>When you add a Program instance to the Report Set that should receive a Parameter value from this Parameter, define value propagation from this Parameter for the Program instance Parameter; see <a href="vars.htm#BABFFFAI">"Setting Up Value Propagation from the Target Parameter"</a>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABIHIGD"></a>
<div id="LSHDG1119" class="sect1">
<h2 class="sect1">Defining Report Set Entries</h2>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABJEJEI">Creating Multiple Report Set Entries</a></p>
</li>
<li>
<p><a href="#BABJFJIJ">Setting Report Set Entry Properties</a></p>
</li>
<li>
<p><a href="#BEIBAHJJ">Adding Narratives</a></p>
</li>
</ul>
<p>Each Report Set Entry can contain one or more of the following:</p>
<ul>
<li>
<p>Other Report Set Entries&mdash;these are subsections, or children, of the Report Set Entry within which they are defined</p>
</li>
<li>
<p>One assigned Program instance and Planned Output to generate a report in the chapter or section represented by the Report Set Entry.</p>
</li>
<li>
<p>Pre-Narrative&mdash;a text narrative displayed either before a report or instead of a report in the chapter or section represented by the Report Set Entry. You can either enter text or upload text from a file</p>
</li>
<li>
<p>Post-Narrative&mdash;a text narrative displayed after a report in the chapter or section represented by the Report Set Entry. You can either enter text or upload text from a file.</p>
</li>
</ul>
<p>You assign a Program instance and Planned Output to a Report Set Entry from the Report Set Structure view (see <a href="#BABJJGDC">"Assign Planned Output"</a>) or from a Report Set Entry's Properties screen (see <a href="#BABBJCBH">"Assigning a Planned Output to a Report Set Entry"</a>).</p>
<a id="BABJEJEI"></a>
<div id="LSHDG1120" class="sect2">
<h3 class="sect2">Creating Multiple Report Set Entries</h3>
<p>To create a Report Set Entry, navigate to the Report Set or Report Set Entry under which you want to create a new Report Set Entry, and:</p>
<ol>
<li>
<p>Click <span class="bold">Add</span>. The Add Entries screen appears.</p>
</li>
<li>
<p>Enter values as necessary in the following fields for each Report Set Entry you want to add at this level. Click <span class="bold">Add 30 Entries</span> if you need any additional rows.</p>
<ul>
<li>
<p><a id="BABBHIBE"></a><span class="bold">Entry No. Prefix</span>. (Optional) The system uses text you enter here, if any, in the Full Title in the table of contents to identify the Report Set Entry. You can use the prefix and suffix to include information that is not part of the actual title of the Report Set Entry but which you need to display. For example, you may require a set of reports so large that you decide to create multiple Report Set definitions to manage it, with one for each volume. To make the numbering unique across the larger set of reports, you must add the volume number as a prefix to each Report Set Entry number.</p>
<p>Oracle truncates spaces at the beginning and end of text in fields. If you want a space to appear between the prefix and the parent number, type <code dir="ltr">\sp\</code> instead of using the space bar on the keyboard.</p>
<p>If you want a delimiter character to appear between the prefix and the parent number, you must type it here.</p>
<p>If you want the system to include the Entry No. Prefix in the Program Title that is available to pass to the Program assigned to the Report Set Entry, leave the checkbox selected. If not, deselect it. See <a href="#BABJJBIC">"Passing Report Set Entry Values to and from Programs"</a> for further information.</p>
</li>
<li>
<p><a id="BABCCEGB"></a><span class="bold">Parent Number</span>. This read-only field contains the number of the Report Set Entry that is the parent of all the Report Set Entries listed here. (If these Report Set Entries are at the top level in the Report Set, this column contains no value.)</p>
<p>The system automatically concatenates parent and child Report Set Entries' numbers. If parent Report Set Entry 10 contains child Report Set Entries 1-3, the system gives the child Report Set Entries numbers 10.1, 10.2, and 10.3. If Report Set Entry 10.2 has two child Report Set Entries, they become 10.2.1 and 10.2.2, and so on.</p>
<p>You use the Delimiter Parameter to determine what punctuation the system inserts between numbers; see Delimiter below.</p>
<p>If you want the system to include the Parent Number in the Program Title that is available to pass to the Program assigned to the Report Set Entry, leave the checkbox selected. If not, deselect it. See <a href="#BABJJBIC">"Passing Report Set Entry Values to and from Programs"</a> for further information.</p>
</li>
<li>
<p><a id="BABEBJID"></a><span class="bold">Delimiter</span>. Enter the character you want the system to use to separate the Entry Number from the Entry Number of the parent Report Set Entry. If there is no parent Report Set Entry, this value has no effect. The default is a period (full stop) (.), which is used in the examples under <a href="#BABCCEGB">Parent Number</a> above. In those examples, if you entered a comma as the Delimiter, for example, the Report Set Entry numbers would be displayed as 10,1 10,2 and 10,3 and 10,2,1 and 10,2,2. Oracle truncates spaces at the beginning and end of text in fields. If you want a space to appear between the delimiter and entry number, type \sp\ instead of using the space bar on the keyboard.</p>
<p>If you want the system to include the Delimiter in the Program Title that is available to pass to the Program assigned to the Report Set Entry, leave the checkbox selected. If not, deselect it. See <a href="#BABJJBIC">"Passing Report Set Entry Values to and from Programs"</a> for further information.</p>
</li>
<li>
<p><a id="BABCJFDI"></a><span class="bold">Entry No</span>. Accept the default value or enter the number that represents the order number of this Report Set Entry in relation to other Report Set Entries contained within the same parent Report Set Entry.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you enter numbers in a nonsequential order, after you apply your changes, the system displays sibling Report Set Entries in order, using the numbers you entered, provided that the set of entry numbers does not violate the numbering settings defined in the parent Report Set or Report Set Entry: if <span class="bold">Strict</span> is set to Yes, numbers must be sequential, with no gaps; if <span class="bold">Unique</span> is set to Yes, numbers must be unique within the parent.
<p>To change the order, you can use the <span class="bold">Reorder</span> feature. See <a href="deftasks.htm#CHDBHCJC">"Reordering and Renumbering Objects"</a> for further information.</p>
</div>
<p>If you want the system to include the Entry No. in the Program Title that is available to pass to the Program assigned to the Report Set Entry, leave the checkbox selected. If not, deselect it. See <a href="#BABJJBIC">"Passing Report Set Entry Values to and from Programs"</a> for further information.</p>
</li>
<li>
<p><a id="BABDHHFF"></a><span class="bold">Entry No. Suffix</span>. (Optional) The system uses text you enter here in the Full Title in the table of contents to identify the Report Set Entry. If you need additional numbers and/or text to follow the Report Set Entry's number in its full title, enter it here. For example, you can include the word "Table," "Listing," or "Figure" (or any other text string) as the suffix.</p>
<p>If you want a space to appear between the entry number and the suffix, type <code dir="ltr">\sp\</code> at the beginning of the suffix.</p>
<p>If you want the system to include the Entry No. Suffix in the Program Title that is available to pass to the Program assigned to the Report Set Entry, leave the checkbox selected. If not, deselect it. See <a href="#BABJJBIC">"Passing Report Set Entry Values to and from Programs"</a> for further information.</p>
</li>
<li>
<p><span class="bold">Title</span>. Enter a title for the Report Set or Report Set Entry. The system displays this value as part of the Full Title in the table of contents to identify the Report Set Entry. The title value is not required to be unique in the Report Set. You can pass its value to the Program that generates the Report Set Entry's Planned Output. The system passes the title value to the Report Set Entry name, which is used internally only. (The internal name must be unique. If another Report Set Entry exists with the same name, the system creates a unique name for the newer Report Set Entry by appending or incrementing <code dir="ltr">_1</code>.)</p>
<p>This field is required unless the Placeholder flag is set to Yes, in which case the system gives the Title the value: <a id="BABIBJBC"></a><code dir="ltr">Placeholder</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The system concatenates the values of the fields up to and including the Title, in the order shown, to create the <span class="italic">Full Title</span> for the Report Set Entry.</div>
</li>
<li>
<p><span class="bold">Subtitle</span> (Optional; Oracle LSH does not use this value). Enter a subtitle for the Report Set Entry. The system can pass this value as a Parameter value for post-processing; see <a href="#BABJJBIC">"Passing Report Set Entry Values to and from Programs"</a> for further information.</p>
</li>
<li>
<p><span class="bold">Report Type</span>. (Optional; Oracle LSH does not use this value). From the drop-down list, select Figure, Listing, or Table. The system can pass this value as a Parameter value during execution; see <a href="#BABJJBIC">"Passing Report Set Entry Values to and from Programs"</a> for further information. The values displayed are configurable. Instructions are in the <span class="italic"><span class="italic">Oracle Life Sciences Data Hub System Administrator's Guide</span></span></p>
</li>
<li>
<p><a id="BABGJAHJ"></a><span class="bold">Placeholder</span>. Set to <span class="bold">Yes</span> to exclude the Report Set Entry from the table of contents. You can use this feature to force the system to accept unconventional numbering. The system does not display a placeholder Report Set Entry in the generated table of contents.</p>
<p>For example, if you have chapter 16 and subsections 16.1.1 and 16.1.2 but no section 16.1, define section 16.1 as a placeholder. In the table of contents, the system does not display 16.1 but it does display chapter 16 and subsections 16.1.1 and 16.1.2.</p>
<p>The default value is <span class="bold">No</span> (the report set entry is not a placeholder).</p>
</li>
<li>
<p><span class="bold">Strict</span>. Set to <span class="bold">Yes</span> if you want to force numbering of Report Set Entries within the Report Set Entry to be sequential, with no gaps. Set to <span class="bold">No</span> if you want to allow gaps.</p>
</li>
<li>
<p><span class="bold">Unique</span>. Set to <span class="bold">Yes</span> if you want to enforce unique numbering of Report Set Entries within the Report Set Entry. Set to <span class="bold">No</span> if you want to allow duplicate numbers.</p>
</li>
<li>
<p><span class="bold">Volume Break</span>. Set to <span class="bold">Yes</span> if you want this Report Set Entry to start a new volume in the post-processed PDF Report Set output.</p>
</li>
<li>
<p><span class="bold">Volume Name</span>. If <span class="bold">Volume Break</span> is set to <span class="bold">Yes</span>, enter the title you want to give the volume that will begin with this Report Set Entry. If <span class="bold">Volume Break</span> is set to <span class="bold">No</span>, the system ignores the <span class="bold">Volume Name</span>, if any.</p>
</li>
</ul>
</li>
<li>
<p>Repeat for as many Report Set Entries as you need with the same parent Report Set or Report Set Entry.</p>
</li>
<li>
<p>Click <span class="bold">Apply</span>. The Report Set instance screen appears. To complete the definition of these Report Set Entries, navigate to each Report Set Entry in turn and do the following:</p>
<ul>
<li>
<p>(Optional) Click <span class="bold">Assign</span> to assign a Program instance and Planned Output to the Report Set Entry. This is required if you want to include a report in the chapter or section represented by the Report Set Entry; but it is optional because you can have Report Set Entries that serve only to organize their subentries and/or display narrative text. See <a href="#BABBJCBH">"Assigning a Planned Output to a Report Set Entry"</a>.</p>
</li>
<li>
<p>(Optional) Click <span class="bold">Add</span> a <span class="bold">Pre-Narrative</span> or <span class="bold">Post-Narrative</span>. Pre- and post-narratives are text that appears immediately before or after the actual generated report, or instead of a report, in a Report Set Entry. See <a href="#BEIBAHJJ">"Adding Narratives"</a>.</p>
</li>
<li>
<p>(Optional) Click <span class="bold">Update</span>. The system makes all other Report Set Entry property fields modifiable; see <a href="#BABJFJIJ">"Setting Report Set Entry Properties"</a>.</p>
</li>
<li>
<p>(Optional) Create Report Set Entry Parameters and/or change the default value of Overlay Template and Post-Processing Parameters; see <a href="#BABCHCAC">"Creating and Setting Report Set Parameters"</a>.</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABJFJIJ"></a>
<div id="LSHDG1122" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Setting Report Set Entry Properties</h3>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABICDGA">Setting Overall Properties</a></p>
</li>
<li>
<p><a href="#BABFEDJC">Setting Title Properties</a></p>
</li>
<li>
<p><a href="#BABJIBCA">Setting Assigned Program Properties</a></p>
</li>
<li>
<p><a href="#BEIBAHJJ">Adding Narratives</a></p>
</li>
<li>
<p><a href="#BABHGFEE">Setting Numbering Properties</a></p>
</li>
<li>
<p><a href="#BABFEGBJ">Setting Volume Break Properties</a></p>
</li>
</ul>
<p>In the main Report Set Entry screen you can set values for many Report Set Entry properties. Reach this screen by clicking on the Report Set Entry's name in the Report Set Structure view, or by navigating to it from the Report Set's Properties screen.</p>
<p>To modify most Report Set Entry properties you must click <span class="bold">Update</span>. However, to assign a Program instance and/or Planned Output or to add a Narrative, you must <span class="italic">not</span> click <span class="bold">Update</span>.</p>
<a id="BABICDGA"></a>
<div id="LSHDG1123" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Setting Overall Properties</h4>
<p>Enter values for the following properties for the Report Set Entry:</p>
<p><a id="LSHDG1124"></a><span class="subhead3">Title&nbsp;</span>Enter a title for the Report Set or Report Set Entry. The system displays this value as part of the Full Title in the table of contents to identify the Report Set Entry. The title value is not required to be unique in the Report Set. The system passes the title value to the Report Set Entry name, which is used internally only and is required to be unique. If another Report Set Entry exists with the same name, the system creates a unique name for the newer Report Set Entry.</p>
<p>This field is required unless the Placeholder flag is set to Yes.</p>
<p><a id="LSHDG1125"></a><span class="subhead3">Subtitle&nbsp;</span>(Optional; Oracle LSH does not use this value.) Enter a subtitle for the Report Set or Report Set Entry. The system can pass this value as a Parameter value for post-processing; see <a href="#BABJJBIC">"Passing Report Set Entry Values to and from Programs"</a> for further information.</p>
<p><a id="LSHDG1126"></a><span class="subhead3">Description&nbsp;</span>(Optional) Enter a description for the Report Set Entry.</p>
<p><a id="LSHDG1127"></a><span class="subhead3">Report Type&nbsp;</span>(Optional; Oracle LSH does not use this value.) Select the expected output type; for example, Table, Figure, or Listing. The system can pass this value as a Parameter value during execution; see <a href="#BABJJBIC">"Passing Report Set Entry Values to and from Programs"</a> for further information. The values displayed are configurable. Instructions are in the "Modifiable Lookups" section of the lookups chapter in the <span class="italic"><span class="italic">Oracle Life Sciences Data Hub System Administrator's Guide</span></span>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
To change the Program Title or Full Title, see <a href="#BABFEDJC">"Setting Title Properties"</a>.</div>
</div>
<!-- class="sect3" -->
<a id="BABFEDJC"></a>
<div id="LSHDG1128" class="sect3">
<h4 class="sect3">Setting Title Properties</h4>
<p>The system concatenates the title properties (except Placeholder) in the order shown below, plus the Title, to generate the <a href="#BABDHDFA">Full Title</a>. The Report Set table of contents displays the Full Title.</p>
<p>Select the checkbox of each property you want the system to concatenate with the Title to generate the Program Title. The system can pass the Program Title to the assigned Program instance during execution; see <a href="#BABJJBIC">"Passing Report Set Entry Values to and from Programs"</a> for further information.</p>
<p>For information about each property, see <a href="#BABJEJEI">"Creating Multiple Report Set Entries"</a>.</p>
<p>The title properties are:</p>
<ul>
<li>
<p><a href="#BABBHIBE">Entry No. Prefix</a></p>
</li>
<li>
<p><a href="#BABCCEGB">Parent Number</a></p>
</li>
<li>
<p><a href="#BABEBJID">Delimiter</a></p>
</li>
<li>
<p><a href="#BABCJFDI">Entry No</a></p>
</li>
<li>
<p><a href="#BABDHHFF">Entry No. Suffix</a></p>
</li>
<li>
<p><a href="#BABGJAHJ">Placeholder</a></p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABJIBCA"></a>
<div id="LSHDG1129" class="sect3">
<h4 class="sect3">Setting Assigned Program Properties</h4>
<p>Report Set Entries have format-related properties whose values can be passed to the assigned Program instance during Report Set execution. In your Program source code you can use these values to format the report output; see <a href="#BABJJBIC">"Passing Report Set Entry Values to and from Programs"</a>. Oracle LSH does not use these values. The following properties are available for use. You can add allowed values for some of them. Instructions are in the chapter "Adding and Modifying Lookup Values" in the <span class="italic"><span class="italic">Oracle Life Sciences Data Hub System Administrator's Guide</span></span>.</p>
<p>A Report Set Entry inherits default values for the Assigned Program Properties from its parent Report Set Entry. The top-level Report Set uses system defaults. You can reset them manually at any level.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can assign a Program instance and Planned Output to a Report Set Entry in either the Report Set Structure View or in the Properties screen of the Report Set Entry.</div>
<p><a id="BABIFHJH"></a><a id="LSHDG1130"></a><span class="subhead3">Page Size Horizontal&nbsp;</span>(Number) Enter the horizontal measurement of the page. If your company does not configure a list of values, the default value is 210 (cms).</p>
<p><a id="BABJBBCF"></a><a id="LSHDG1131"></a><span class="subhead3">Page Size Vertical&nbsp;</span>(Number) Enter the vertical measurement of the page. If your company does not configure a list of values, the default value is 297 (cms).</p>
<p><a id="BABHEJGG"></a><a id="LSHDG1132"></a><span class="subhead3">Page Size Unit&nbsp;</span>The unit in which the horizontal and vertical measurements are given. If your company does not configure a list of values, the default value is cms (centimeters).</p>
<p><a id="BABFCDGC"></a><a id="LSHDG1133"></a><span class="subhead3">Program Title Font Name&nbsp;</span>Select the name of the font in which you want the title to appear. If your company does not configure a list of values, the default value is Courier.</p>
<p><a id="BABEBICA"></a><a id="LSHDG1134"></a><span class="subhead3">Program Title Font Size&nbsp;</span>(Number) Enter the size of the font in which you want the title to appear. If your company does not configure a list of values, the default value is 10.</p>
<p><a id="BABJFAGI"></a><a id="LSHDG1135"></a><span class="subhead3">Footer&nbsp;</span>Enter the text you want to use as the footer on each page of the report, up to 200 characters.</p>
<p><a id="BABEBDAF"></a><a id="LSHDG1136"></a><span class="subhead3">Page Size Margin Left&nbsp;</span>(Number) Enter the size of the margin you want at the left side of the page. If your company does not configure a list of values, the default value is 3.42 (cms).</p>
<p><a id="BABEAGJA"></a><a id="LSHDG1137"></a><span class="subhead3">Page Size Margin Top&nbsp;</span>(Number) Enter the size of the margin you want at the top of the page. If your company does not configure a list of values, the default value is 3.42 (cms).</p>
</div>
<!-- class="sect3" -->
<div id="LSHDG1138" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref75"></a>
<h4 class="sect3">Adding Narratives</h4>
<p>You can add and remove Narratives only when you are not in update mode; see <a href="#BEIBAHJJ">"Adding Narratives"</a>.</p>
</div>
<!-- class="sect3" -->
<a id="BABHGFEE"></a>
<div id="LSHDG1139" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Setting Numbering Properties</h4>
<p>You can modify the numbering properties as follows:</p>
<p><a id="LSHDG1140"></a><span class="subhead3">Strict&nbsp;</span>If you want to require that all Report Set Entries contained in this Report Set Entry have sequential numbering, with no gaps, select <span class="bold">Yes</span>. The default value is shared from the parent Report Set Entry or Report Set.</p>
<p><a id="LSHDG1141"></a><span class="subhead3">Unique&nbsp;</span>If you want to require that each Report Set Entry contained in this Report Set Entry have a unique number within this Report Set Entry, select <span class="bold">Yes</span>. The default value is shared from the parent Report Set Entry or Report Set.</p>
</div>
<!-- class="sect3" -->
<a id="BABFEGBJ"></a>
<div id="LSHDG1142" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Setting Volume Break Properties</h4>
<p>Set the Volume Break properties as follows:</p>
<p><a id="LSHDG1143"></a><span class="subhead3">Volume Break&nbsp;</span>If you want this Report Set Entry to be the first in a separate PDF file, or volume of the Report Set, select <span class="bold">Yes</span>. The default value is <span class="bold">No</span>.</p>
<p><a id="LSHDG1144"></a><span class="subhead3">Volume Name&nbsp;</span>If you want this Report Set entry to be the first in a separate PDF file, or volume of the Report Set, enter the name of the volume you want it to start.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you enter a Volume Name but set Volume Break to <span class="bold">No</span>, Oracle XML Publisher does not create a volume break at this Report Set Entry (and does not use the Volume Name value).
<p>You can override these settings at the Report Set level by defining a value for the Report Set Post-Processing Parameter Single Volume Output Name. If that Parameter has a value, the system generates a single volume with the name specified and ignores all Report Set Entry volume-related values.</p>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BEIBAHJJ"></a>
<div id="LSHDG1146" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Adding Narratives</h3>
<p>A narrative is text that you can add to a Report Set Entry either in addition to or instead of reports generated by a Program instance. If a Report Set Entry contains both narratives and a Program instance, the narratives appear on the same page as reports either immediately before or after the report generated by the Program instance.</p>
<p>Narratives added as Pre-Narratives appear before the report, and narratives added as Post-Narratives appear after the report.</p>
<p>To add a narrative, you must not be in Update mode.</p>
<ol>
<li>
<p>In the Report Set Entry's Properties screen, click either the Pre-Narrative or Post-Narrative <span class="bold">Add</span> button. The appropriate Add screen opens.</p>
</li>
<li>
<p>Either upload a file containing the text or enter the text:</p>
<ul>
<li>
<p>To upload text, click <span class="bold">Browse</span>. The Choose file window opens. Browse and select the text file. Click <span class="bold">Open</span>. The system copies the text into the Narrative Description text box.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The system does not store the file in Oracle LSH when you upload it. The system copies the text content as a string.</div>
</li>
<li>
<p>Alternatively, enter text in the Narrative Description text box.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you both upload a text file and enter text, the file you upload overwrites the text you enter.</div>
</li>
</ul>
</li>
<li>
<p>Click <span class="bold">Apply</span>. The system returns you to the Report Set Entry screen.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABHBABA"></a>
<div id="LSHDG1147" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Defining Programs to Generate Reports</h2>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABBFDGE">About Programs in Report Sets</a></p>
</li>
<li>
<p><a href="#BABBJCBH">Assigning a Planned Output to a Report Set Entry</a></p>
</li>
<li>
<p><a href="#BABFAAID">Options from the Report Set Program View Screen</a></p>
</li>
<li>
<p><a href="#BABEIDGI">Viewing Planned Output Assignments</a></p>
</li>
<li>
<p><a href="#BABJJBIC">Passing Report Set Entry Values to and from Programs</a></p>
</li>
</ul>
<a id="BABBFDGE"></a>
<div id="LSHDG1148" class="sect2">
<h3 class="sect2">About Programs in Report Sets</h3>
<p>A Report Set's reports are generated by Program instances in the Report Set. You can create a Program definition and instance from within a Report Set, or you can create an instance in a Report Set of a Program definition in an Application Area or Domain. You can have Programs of different technology types (for example, SAS, PL/SQL, and Oracle Reports) in the same Report Set. See <a href="progs.htm#BABBDBEC">Chapter 5, "Defining Programs"</a> for general information about Programs in Oracle LSH.</p>
<p>Each Program instance in a Report Set can have any number of primary Planned Outputs, each of which corresponds to a single report output. You can assign each Planned Output to a Report Set Entry. When you execute the Report Set, each report appears in the Report Set in the location defined by its Report Set Entry.</p>
<p>Each Program instance in a Report Set is executed once during Report Set execution and can be submitted with only one set of Parameter values. Therefore, when you change a Program Parameter value in the Execution Setup definition or at submission under one Report Set Entry, the value is effectively changed for all Report Set Entries assigned to the same Program instance.</p>
<p>Similarly, when you execute the Report Set, you must select a single currency and blinding status for the Report Set instance.</p>
<p>Only one person can check out and work on a particular Program instance in a Report Set at a time. In addition:</p>
<ul>
<li>
<p>Programs that are checked out by other people when you execute a Report Set are not executed and a message to that effect appears in the Report Set output if you create an Overlay Template for that purpose (see <a href="#BABJJIIA">"Creating an Overlay Template Definition"</a>). The information is also in the Report Set's log file. If you have a Program checked out, the system executes the installed version of it.</p>
</li>
<li>
<p>Programs that are checked out during Report Set installation by another user are not installed; see <a href="#BABCDJHA">"Installing Report Sets"</a>.</p>
</li>
</ul>
<p>Developing Programs inside Report Sets is different from developing independent Programs in the following ways:</p>
<ul>
<li>
<p><span class="bold">Planned Outputs</span>. You can assign each primary Planned Output that you want to include in the Report Set to a different Report Set Entry. Do this in the Report Set Entry or the Report Set Structure view; see <a href="#BABBJCBH">"Assigning a Planned Output to a Report Set Entry"</a>. You are not required to assign every Planned Output to a Report Set Entry. Any unassigned Planned Outputs are not included in the Report Set output.</p>
</li>
<li>
<p><a id="BABIBFEJ"></a><span class="bold">Mapping</span>. All the standard Oracle LSH methods of mapping are available:</p>
<ul>
<li>
<p><span class="bold">Automatic Mapping by Name</span> is available for multiple Program instances at once from the Report Set Structure View and for one Program instance at a time from the Program View.</p>
</li>
<li>
<p><span class="bold">Create Table Descriptors from Existing Table Instances</span>, which includes mapping, is available from the <span class="bold">Actions</span> drop-down on each Program instance's Properties screen.</p>
</li>
<li>
<p><span class="bold">Create Table Instances from Existing Table Descriptors</span>, which includes mapping, is available from the <span class="bold">Actions</span> drop-down on the Report Set's Properties screen. You can select Table Descriptors from all Program instances in the Report Set.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you map or modify the mappings of a checked-in Program instance, the system implicitly checks out the Program instance. This ensures that the Program instance and associated mappings must be installed (and therefore versioned) if any of its mappings are modified.</div>
</li>
</ul>
</li>
<li>
<p><span class="bold">Parameters</span>. As with Programs outside of Report Sets, you can define Parameters as necessary and set them in the Program instance, in the Execution Setup, or at runtime. In addition, you can pass the values of Report Set Entry properties to the Program instance and back; see <a href="#BABJJBIC">"Passing Report Set Entry Values to and from Programs"</a>.</p>
<p>You can also define Parameters directly at the Report Set or Report Set Entry level for the purpose of sharing their value with Program input Parameters at runtime, and you can populate the value of one Program's input Parameter with the value of another Program's output Parameter at runtime; see <a href="#BABEFFGI">"Creating Parameters for Sharing Values within the Report Set"</a>.</p>
</li>
<li>
<p><span class="bold">Output Reuse</span>. Unless you specify otherwise, Oracle LSH does not regenerate an output if the Program instance version, data currency, and Parameter values have not changed since the last execution that produced a nonretired output; see <a href="#BABHGAEE">"Output Reuse"</a>.</p>
<p>You can force the system to run the job and regenerate the output by setting the system Parameter <span class="bold">Force Execution</span> to <span class="bold">Yes</span> in the Execution Setup or at submission.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Setting <span class="bold">Force Execution</span> to <span class="bold">Yes</span> reruns all the Program instances whose Report Set Entries are included in the execution. Use this option only if you want all of these outputs to be reproduced.</div>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
It is possible to include Program instances in a Report Set that transform data, or that both transform and report data. However, for the best Report Set execution performance, Oracle recommends including only Program instances that report data, not Programs that transform data, inside a Report Set. Instead, run transform Program instances outside the Report Set and use their target Table instances as the source Table instances for Program instances in the Report Set.</div>
<p>You can add Programs, map their Table Descriptors, and submit them for execution in several different Oracle LSH screens. See the following sections for details:</p>
<ul>
<li>
<p><span class="bold">Report Set Structure View</span>. To reach the Structure view, click the Report Set's hyperlink under the Work Area and then select Structure from the View drop-down if it is not already selected; see <a href="#BABDADGA">"Building and Modifying the Report Set"</a>.</p>
</li>
<li>
<p><span class="bold">Report Set Program View</span>. To reach the Structure view, click the Report Set's hyperlink under the Work Area and then select Program from the View drop-down if it is not already selected; see <a href="#BABFAAID">"Options from the Report Set Program View Screen"</a></p>
</li>
<li>
<p><span class="bold">Report Set Entry Add Screen</span>. To reach the Add Report Set Entries screen, go first to the Report Set Properties screen by clicking its hyperlink in the Report Set Structure view. Then click <span class="bold">Add Entries</span>; see <a href="#BABJEJEI">"Creating Multiple Report Set Entries"</a>.</p>
</li>
<li>
<p><span class="bold">Report Set Entry Properties Screen</span>. To reach a Report Set Entry's Properties screen, click its hyperlink in the Report Set Structure view; see <a href="#BABJFJIJ">"Setting Report Set Entry Properties"</a>.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BABBJCBH"></a>
<div id="LSHDG1150" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Assigning a Planned Output to a Report Set Entry</h3>
<p>After you assign a Program instance to a Report Set Entry, you can assign its primary Planned Outputs to other Report Set Entries in the same Report Set. The system then places the actual report generated by the Program instance for that Planned Output in the chapter or subsection corresponding to the Report Set Entry.</p>
<p>If you select a Report Set Entry that already has a Planned Output assigned, you can change the assignment by selecting a different one.</p>
<p>You can assign a Planned Output as follows:</p>
<ul>
<li>
<p>In the Report Set Structure view, select the Report Set Entry to which you want to assign a Planned Output, select <span class="bold">Assign Planned Output</span> from the drop-down list, and click <span class="bold">Go</span>.</p>
</li>
<li>
<p>In the Report Set Entry Properties screen (not in Update mode), click the <span class="bold">Assign</span> button.</p>
</li>
</ul>
<p>In both cases, the Assign Program Instance and Planned Output screen opens. Do the following:</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the Report Set Entry already has a Planned Output assigned, the screen is populated with the Planned Output's Program instance and all its Planned Outputs. You can select a different Planned Output of the same Program or follow the instructions below to select a different Program instance and Planned Output.</div>
<ol>
<li>
<p>In the <span class="bold">Search By Program Instance</span> field, click the Search icon. The Search and Select window opens.</p>
</li>
<li>
<p>Click <span class="bold">Go</span>, or enter the name of the Program instance whose Planned Output you want to assign and then click <span class="bold">Go</span>.</p>
<p>The system lists Program instances already assigned to the Report Set. If you have entered the name of the Program instance, the system displays only that Program instance.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The system displays only checked-in Program instances.</div>
</li>
<li>
<p>Click the icon in the Quick Select column for the Program instance whose Planned Output you want to assign.</p>
<p>The system returns you to the Assign Planned Output screen with the Program instance name displayed.</p>
</li>
<li>
<p>Click <span class="bold">Go</span>. The system displays the Planned Outputs of the selected Program instance.</p>
<p>If a Planned Output is already assigned to a Report Set Entry, the system displays that Report Set Entry's number and title in the <span class="bold">Assigned to RSE</span> column.</p>
</li>
<li>
<p>Select the Planned Output you want to assign and click the <span class="bold">Select</span> button. The system assigns the Planned Output to the current Report Set Entry. If you select a Planned Output that is already assigned to another Report Set Entry, the system removes it from that Report Set Entry.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABFAAID"></a>
<div id="LSHDG1152" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Options from the Report Set Program View Screen</h3>
<p>To reach the Program View screen, navigate to the Report Set in the Applications tab hierarchy and click its hyperlink. Then select <span class="bold">Program</span> from the <span class="bold">View</span> drop-down list.</p>
<p>In the Report Set Structure view you can build and modify the Report Set structure and do many other things as follows:</p>
<ol>
<li>
<p>Select a Program instance.</p>
</li>
<li>
<p>Select one of the following items from the drop-down list.</p>
</li>
<li>
<p>Click <span class="bold">Go</span>.</p>
</li>
</ol>
<p>The following actions are available:</p>
<ul>
<li>
<p><span class="bold">Copy</span>. The system opens the Paste screen and copies the Program instance you selected into the location you specify: either a Report Set or a Work Area. The system copies the Program instance's Execution Setup(s) and Table Descriptor mappings. See <a href="deftasks.htm#CHDDGDBJ">"Copying, Cloning, and Moving Objects"</a> for instructions.</p>
</li>
<li>
<p><span class="bold">Default Execution Setup</span>. If a default Execution Setup already exists for this Program, the system displays it. If a default Execution Setup does not yet exist, the system automatically creates one; see <a href="deftasks.htm#BEIGAICB">"Creating, Modifying, and Submitting Execution Setups"</a> for further information.</p>
</li>
<li>
<p><span class="bold">Install</span>. The system installs the selected Program instance. You can install a Program instance if it is checked in or if you have checked it out.</p>
</li>
<li>
<p><span class="bold">Map</span>. The standard Mapping screen opens. The Table Descriptors of this Program only are available for mapping; see <a href="deftasks.htm#BACBIIJA">"Defining and Mapping Table Descriptors"</a>. You can map Table Descriptors for multiple Program instances at once in the Report Set Structure view.</p>
</li>
<li>
<p><span class="bold">Remove</span>. The system deletes the selected Program instance. If the Program instance is assigned to one or more Report Set Entries, you get a warning. You can see where its Planned Outputs are assigned by clicking its hyperlink to open its Properties screen and then clicking the Planned Outputs tab.</p>
<p>The Program definition is not affected.</p>
</li>
<li>
<p><span class="bold">Quick Submit</span>. The system submits the Program instance using the default Execution Setup with its default values, without opening the Execution Setup screen. The system upgrades the Execution Setup if necessary and validates it. The submission fails if:</p>
<ul>
<li>
<p>The Execution Setup cannot be upgraded; for example, if another user is currently modifying the default Execution Setup</p>
</li>
<li>
<p>The Execution Setup is invalid; for example, the Parameters that apply to the portion of the Report Set being submitted have invalid values</p>
</li>
</ul>
<p>In the Job Execution section of the My Home page you see two jobs. A temporary job starts the actual report generation job.</p>
</li>
<li>
<p><span class="bold">Submit</span>. The system opens the submission screen for the default Execution Setup. From there you can set Parameters and submit the Program instance. The system automatically includes in the submission all Report Set Entries to which the Program is assigned. See <a href="deftasks.htm#BEIGAICB">"Creating, Modifying, and Submitting Execution Setups"</a>.</p>
<p>To submit a different Execution Setup, click the Program's hyperlink to open its Properties screen. Select <span class="bold">Execution Setups</span> from the <span class="bold">Actions</span> drop-down list and follow instructions in <a href="deftasks.htm#BEIGAICB">"Creating, Modifying, and Submitting Execution Setups"</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can submit a Program instance in a Report Set only if it is installed and assigned to at least one Report Set Entry.</div>
</li>
</ul>
<p><a id="LSHDG1153"></a><span class="subhead3">View Programs&nbsp;</span>Click a Program's hyperlink in the Name column to go to that Program's Properties screen.</p>
</div>
<!-- class="sect2" -->
<a id="BABEIDGI"></a>
<div id="LSHDG1155" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Viewing Planned Output Assignments</h3>
<p>You can see information about Planned Output assignments in the following places:</p>
<ul>
<li>
<p>In the Report Set instance's Program view, there is a column that displays the number of primary Planned Outputs each Program has, and another column for the number of primary Planned Outputs that are not currently assigned to a Report Set Entry. To see which Planned Outputs are assigned to which Report Set Entries, click the hyperlink on the Program's name, then open the Planned Outputs tab.</p>
</li>
<li>
<p>In the Report Set instance's Structure view, there is a column for Assigned Planned Output that displays the name of the Planned Output assigned to each Report Set Entry.</p>
</li>
<li>
<p>In the Properties screen for each Report Set Entry, the system displays the name of the Program instance and Planned Output currently assigned to the Report Set Entry. This is the only place where you can create and remove Planned Output assignments. See <a href="#BABBJCBH">"Assigning a Planned Output to a Report Set Entry"</a> for instructions.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BABJJBIC"></a>
<div id="LSHDG1157" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Passing Report Set Entry Values to and from Programs</h3>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABDADJI">Report Set Entry Properties Available for Passing</a></p>
</li>
<li>
<p><a href="#BABICCBI">Passing Values from a Report Set Entry to a Program Instance</a></p>
</li>
<li>
<p><a href="#BABFDDEJ">Passing Values from a Program Instance to the Report Set for Post-Processing</a></p>
</li>
</ul>
<p>You can pass the values of title- and formatting-related Report Set Entry properties to the Program assigned to a Report Set Entry, use these values in the Program's source code during execution, and then send a values back to the Report Set for use during postprocessing.</p>
<p>Different Report Set Entries assigned to the same Program instance can have different values for the same Report Set Entry properties. If you use this feature, your source code must handle the input from different Report Set Entries, and the output to different Report Set Entries, correctly.</p>
<a id="BABDADJI"></a>
<div id="LSHDG1158" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Report Set Entry Properties Available for Passing</h4>
<p>You can pass the values of Report Set Entry assigned program properties and several additional properties from a Report Set Entry to its assigned Program and use them in the Program to format the output of the Report Set Entry. See <a href="#BABJIBCA">"Setting Assigned Program Properties"</a> for a description of each Program property.</p>
<ul>
<li>
<p><a href="#BABIFHJH">Page Size Horizontal</a></p>
</li>
<li>
<p><a href="#BABJBBCF">Page Size Vertical</a></p>
</li>
<li>
<p><a href="#BABHEJGG">Page Size Unit</a></p>
</li>
<li>
<p><a href="#BABFCDGC">Program Title Font Name</a></p>
</li>
<li>
<p><a href="#BABEBICA">Program Title Font Size</a></p>
</li>
<li>
<p><a href="#BABJFAGI">Footer</a></p>
</li>
<li>
<p><a href="#BABEBDAF">Page Size Margin Left</a></p>
</li>
<li>
<p><a href="#BABEAGJA">Page Size Margin Top</a></p>
</li>
</ul>
<p>You can also pass values for the following:</p>
<ul>
<li>
<p><span class="bold">File Reference Name</span> Each Planned Output can have only one file reference name, and each Planned Output is assigned to only one Report Set Entry. Oracle recommends using the file reference name in your Program code to distinguish the properties of one Report Set Entry from another one to which another Planned Output of the same Program instance is assigned. However, Oracle LSH does not enforce unique File Reference Names among a Program's Planned Outputs; you must do that manually.</p>
</li>
<li>
<p><span class="bold">Full Title</span>. The system uses the full title in the Report Set's table of contents. The Full Title includes all of the following, concatenated in the following order:</p>
<p>Entry No. Prefix||Parent No.||Delimiter||Entry No.||Entry No. Suffix||" " || Title</p>
</li>
<li>
<p><span class="bold">Program Title</span>. The system does not use the Program title. It always includes the Title and can include any of the other elements that the Full Title can, in the same order, if you so specify; see <a href="#BABFEDJC">"Setting Title Properties"</a> and <a href="#BABJJBIC">"Passing Report Set Entry Values to and from Programs"</a>.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABICCBI"></a>
<div id="LSHDG1159" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Passing Values from a Report Set Entry to a Program Instance</h4>
<p>The method of passing Report Set Entry values to a Program instance differs depending on whether you are working in <a href="#BABCICEG">SAS</a> or <a href="#BABIGJEA">Oracle Reports or PL/SQL</a>.</p>
<div id="LSHDG1160" class="sect4"><a id="sthref76"></a>
<h5 class="sect4">SAS</h5>
<p>Oracle LSH includes a SAS data set named LSH_RS.RS_TITLE that is available when you open the SAS IDE or execute a SAS Program from within the context of a Report Set. LSH_RS.RS_TITLE includes the values of all Program properties, plus the file reference name, Full Title, Program Title, and Report Type for all the Report Set Entries to which the Program instance is assigned. The primary key is the file reference name of the Planned Output assigned to each Report Set Entry.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle LSH does not enforce file reference name uniqueness among a Program's Planned Outputs. If you plan to pass values from a Report Set Entry to its Program instance, you must ensure that each Planned Output assigned to a Report Set Entry has a different file reference name.</div>
<p>Your source code can reference any of the values in LSH_RS.</p>
<div id="LSHDG1161" class="tblformalwide">
<p class="titleintable"><a id="sthref77"></a><a id="BABGIFCC"></a>Table 9-3 Report Set Entry Properties and Corresponding LSH_RS Data Set Variables</p>
<table class="cellalignment83" title="Report Set Entry Properties and Corresponding LSH_RS Data Set Variables " summary="This table lists all the Report Set Entry properties available to Program instances in a SAS data set, with their variable name, type, length, format, informat, and label. They are: Title Reference Name, Program Title Font Name, Program Title Font Size, Footer, Page Size Horizontal, Page Size Margin Left, Page Size Margin Top, Page Size Unit, Page Size Vertical, Report Type, Program Title, Title, Subtitle, Full Title, and Volume Name." dir="ltr">
<thead>
<tr class="cellalignment71">
<th class="cellalignment82" id="r1c1-t40">Property</th>
<th class="cellalignment82" id="r1c2-t40">Number</th>
<th class="cellalignment82" id="r1c3-t40">Variable</th>
<th class="cellalignment82" id="r1c4-t40">Type</th>
<th class="cellalignment82" id="r1c5-t40">Length</th>
<th class="cellalignment82" id="r1c6-t40">Format</th>
<th class="cellalignment82" id="r1c7-t40">Informat</th>
<th class="cellalignment82" id="r1c8-t40">Label</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment71">
<td class="cellalignment77" id="r2c1-t40" headers="r1c1-t40">
<p>File Reference Name</p>
</td>
<td class="cellalignment77" headers="r2c1-t40 r1c2-t40">
<p>1</p>
</td>
<td class="cellalignment77" headers="r2c1-t40 r1c3-t40">
<p>FILE_REF</p>
</td>
<td class="cellalignment77" headers="r2c1-t40 r1c4-t40">
<p>Char</p>
</td>
<td class="cellalignment77" headers="r2c1-t40 r1c5-t40">
<p>8</p>
</td>
<td class="cellalignment77" headers="r2c1-t40 r1c6-t40">
<p>$8.</p>
</td>
<td class="cellalignment77" headers="r2c1-t40 r1c7-t40">
<p>$8.</p>
</td>
<td class="cellalignment77" headers="r2c1-t40 r1c8-t40">
<p>FILE_REF</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r3c1-t40" headers="r1c1-t40">
<p>Title</p>
</td>
<td class="cellalignment77" headers="r3c1-t40 r1c2-t40">
<p>2</p>
</td>
<td class="cellalignment77" headers="r3c1-t40 r1c3-t40">
<p>TITLE</p>
</td>
<td class="cellalignment77" headers="r3c1-t40 r1c4-t40">
<p>Char</p>
</td>
<td class="cellalignment77" headers="r3c1-t40 r1c5-t40">
<p>4000</p>
</td>
<td class="cellalignment77" headers="r3c1-t40 r1c6-t40">
<p>$4000.</p>
</td>
<td class="cellalignment77" headers="r3c1-t40 r1c7-t40">
<p>$4000.</p>
</td>
<td class="cellalignment77" headers="r3c1-t40 r1c8-t40">
<p>TITLE</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r4c1-t40" headers="r1c1-t40">
<p>Full Title</p>
</td>
<td class="cellalignment77" headers="r4c1-t40 r1c2-t40">
<p>3</p>
</td>
<td class="cellalignment77" headers="r4c1-t40 r1c3-t40">
<p>TOCTITLE</p>
</td>
<td class="cellalignment77" headers="r4c1-t40 r1c4-t40">
<p>Char</p>
</td>
<td class="cellalignment77" headers="r4c1-t40 r1c5-t40">
<p>4000</p>
</td>
<td class="cellalignment77" headers="r4c1-t40 r1c6-t40">
<p>$4000.</p>
</td>
<td class="cellalignment77" headers="r4c1-t40 r1c7-t40">
<p>$4000.</p>
</td>
<td class="cellalignment77" headers="r4c1-t40 r1c8-t40">
<p>TOCTITLE</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r5c1-t40" headers="r1c1-t40">
<p>Program Title</p>
</td>
<td class="cellalignment77" headers="r5c1-t40 r1c2-t40">
<p>4</p>
</td>
<td class="cellalignment77" headers="r5c1-t40 r1c3-t40">
<p>RSETITLE</p>
</td>
<td class="cellalignment77" headers="r5c1-t40 r1c4-t40">
<p>Char</p>
</td>
<td class="cellalignment77" headers="r5c1-t40 r1c5-t40">
<p>200</p>
</td>
<td class="cellalignment77" headers="r5c1-t40 r1c6-t40">
<p>$200.</p>
</td>
<td class="cellalignment77" headers="r5c1-t40 r1c7-t40">
<p>$200.</p>
</td>
<td class="cellalignment77" headers="r5c1-t40 r1c8-t40">
<p>RSETITLE</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r6c1-t40" headers="r1c1-t40">
<p>Prefix</p>
</td>
<td class="cellalignment77" headers="r6c1-t40 r1c2-t40">
<p>5</p>
</td>
<td class="cellalignment77" headers="r6c1-t40 r1c3-t40">
<p>PREFIX</p>
</td>
<td class="cellalignment77" headers="r6c1-t40 r1c4-t40">
<p>Char</p>
</td>
<td class="cellalignment77" headers="r6c1-t40 r1c5-t40">
<p>200</p>
</td>
<td class="cellalignment77" headers="r6c1-t40 r1c6-t40">
<p>$200.</p>
</td>
<td class="cellalignment77" headers="r6c1-t40 r1c7-t40">
<p>$200.</p>
</td>
<td class="cellalignment77" headers="r6c1-t40 r1c8-t40">
<p>PREFIX</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r7c1-t40" headers="r1c1-t40">
<p>Parent No.</p>
</td>
<td class="cellalignment77" headers="r7c1-t40 r1c2-t40">
<p>6</p>
</td>
<td class="cellalignment77" headers="r7c1-t40 r1c3-t40">
<p>PARENT</p>
</td>
<td class="cellalignment77" headers="r7c1-t40 r1c4-t40">
<p>Char</p>
</td>
<td class="cellalignment77" headers="r7c1-t40 r1c5-t40">
<p>4000</p>
</td>
<td class="cellalignment77" headers="r7c1-t40 r1c6-t40">
<p>$4000.</p>
</td>
<td class="cellalignment77" headers="r7c1-t40 r1c7-t40">
<p>$4000.</p>
</td>
<td class="cellalignment77" headers="r7c1-t40 r1c8-t40">
<p>PARENT</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r8c1-t40" headers="r1c1-t40">
<p>Delimiter</p>
</td>
<td class="cellalignment77" headers="r8c1-t40 r1c2-t40">
<p>7</p>
</td>
<td class="cellalignment77" headers="r8c1-t40 r1c3-t40">
<p>DELIMIT</p>
</td>
<td class="cellalignment77" headers="r8c1-t40 r1c4-t40">
<p>Char</p>
</td>
<td class="cellalignment77" headers="r8c1-t40 r1c5-t40">
<p>30</p>
</td>
<td class="cellalignment77" headers="r8c1-t40 r1c6-t40">
<p>$30.</p>
</td>
<td class="cellalignment77" headers="r8c1-t40 r1c7-t40">
<p>$30.</p>
</td>
<td class="cellalignment77" headers="r8c1-t40 r1c8-t40">
<p>DELIMIT</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r9c1-t40" headers="r1c1-t40">
<p>Entry No.</p>
</td>
<td class="cellalignment77" headers="r9c1-t40 r1c2-t40">
<p>8</p>
</td>
<td class="cellalignment77" headers="r9c1-t40 r1c3-t40">
<p>ENTRY</p>
</td>
<td class="cellalignment77" headers="r9c1-t40 r1c4-t40">
<p>Char</p>
</td>
<td class="cellalignment77" headers="r9c1-t40 r1c5-t40">
<p>200</p>
</td>
<td class="cellalignment77" headers="r9c1-t40 r1c6-t40">
<p>$200.</p>
</td>
<td class="cellalignment77" headers="r9c1-t40 r1c7-t40">
<p>$200.</p>
</td>
<td class="cellalignment77" headers="r9c1-t40 r1c8-t40">
<p>ENTRY</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r10c1-t40" headers="r1c1-t40">
<p>Suffix</p>
</td>
<td class="cellalignment77" headers="r10c1-t40 r1c2-t40">
<p>9</p>
</td>
<td class="cellalignment77" headers="r10c1-t40 r1c3-t40">
<p>SUFFIX</p>
</td>
<td class="cellalignment77" headers="r10c1-t40 r1c4-t40">
<p>Char</p>
</td>
<td class="cellalignment77" headers="r10c1-t40 r1c5-t40">
<p>200</p>
</td>
<td class="cellalignment77" headers="r10c1-t40 r1c6-t40">
<p>$200.</p>
</td>
<td class="cellalignment77" headers="r10c1-t40 r1c7-t40">
<p>$200.</p>
</td>
<td class="cellalignment77" headers="r10c1-t40 r1c8-t40">
<p>SUFFIX</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r11c1-t40" headers="r1c1-t40">
<p>Subtitle</p>
</td>
<td class="cellalignment77" headers="r11c1-t40 r1c2-t40">
<p>10</p>
</td>
<td class="cellalignment77" headers="r11c1-t40 r1c3-t40">
<p>TITLE2</p>
</td>
<td class="cellalignment77" headers="r11c1-t40 r1c4-t40">
<p>Char</p>
</td>
<td class="cellalignment77" headers="r11c1-t40 r1c5-t40">
<p>200</p>
</td>
<td class="cellalignment77" headers="r11c1-t40 r1c6-t40">
<p>$200.</p>
</td>
<td class="cellalignment77" headers="r11c1-t40 r1c7-t40">
<p>$200.</p>
</td>
<td class="cellalignment77" headers="r11c1-t40 r1c8-t40">
<p>TITLE2</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r12c1-t40" headers="r1c1-t40">
<p>Report Type</p>
</td>
<td class="cellalignment77" headers="r12c1-t40 r1c2-t40">
<p>11</p>
</td>
<td class="cellalignment77" headers="r12c1-t40 r1c3-t40">
<p>REP_TYPE</p>
</td>
<td class="cellalignment77" headers="r12c1-t40 r1c4-t40">
<p>Char</p>
</td>
<td class="cellalignment77" headers="r12c1-t40 r1c5-t40">
<p>4000</p>
</td>
<td class="cellalignment77" headers="r12c1-t40 r1c6-t40">
<p>$100.</p>
</td>
<td class="cellalignment77" headers="r12c1-t40 r1c7-t40">
<p>$4000.</p>
</td>
<td class="cellalignment77" headers="r12c1-t40 r1c8-t40">
<p>REP_TYPE</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r13c1-t40" headers="r1c1-t40">
<p>Footer</p>
</td>
<td class="cellalignment77" headers="r13c1-t40 r1c2-t40">
<p>12</p>
</td>
<td class="cellalignment77" headers="r13c1-t40 r1c3-t40">
<p>FOOTER</p>
</td>
<td class="cellalignment77" headers="r13c1-t40 r1c4-t40">
<p>Char</p>
</td>
<td class="cellalignment77" headers="r13c1-t40 r1c5-t40">
<p>200</p>
</td>
<td class="cellalignment77" headers="r13c1-t40 r1c6-t40">
<p>$200.</p>
</td>
<td class="cellalignment77" headers="r13c1-t40 r1c7-t40">
<p>$200.</p>
</td>
<td class="cellalignment77" headers="r13c1-t40 r1c8-t40">
<p>FOOTER</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r14c1-t40" headers="r1c1-t40">
<p>Program Title Font Name</p>
</td>
<td class="cellalignment77" headers="r14c1-t40 r1c2-t40">
<p>13</p>
</td>
<td class="cellalignment77" headers="r14c1-t40 r1c3-t40">
<p>FONTNAME</p>
</td>
<td class="cellalignment77" headers="r14c1-t40 r1c4-t40">
<p>Char</p>
</td>
<td class="cellalignment77" headers="r14c1-t40 r1c5-t40">
<p>4000</p>
</td>
<td class="cellalignment77" headers="r14c1-t40 r1c6-t40">
<p>$20.</p>
</td>
<td class="cellalignment77" headers="r14c1-t40 r1c7-t40">
<p>$4000.</p>
</td>
<td class="cellalignment77" headers="r14c1-t40 r1c8-t40">
<p>FONTNAME</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r15c1-t40" headers="r1c1-t40">
<p>Program Title Font Size</p>
</td>
<td class="cellalignment77" headers="r15c1-t40 r1c2-t40">
<p>14</p>
</td>
<td class="cellalignment77" headers="r15c1-t40 r1c3-t40">
<p>FONTSIZE</p>
</td>
<td class="cellalignment77" headers="r15c1-t40 r1c4-t40">
<p>Num</p>
</td>
<td class="cellalignment77" headers="r15c1-t40 r1c5-t40">
<p>8</p>
</td>
<td class="cellalignment77" headers="r15c1-t40 r1c6-t40">
<p>6.</p>
</td>
<td class="cellalignment77" headers="r15c1-t40 r1c7-t40">
<p>7.</p>
</td>
<td class="cellalignment77" headers="r15c1-t40 r1c8-t40">
<p>FONTSIZE</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r16c1-t40" headers="r1c1-t40">
<p>Page Size Horizontal</p>
</td>
<td class="cellalignment77" headers="r16c1-t40 r1c2-t40">
<p>15</p>
</td>
<td class="cellalignment77" headers="r16c1-t40 r1c3-t40">
<p>PS_HORI</p>
</td>
<td class="cellalignment77" headers="r16c1-t40 r1c4-t40">
<p>Num</p>
</td>
<td class="cellalignment77" headers="r16c1-t40 r1c5-t40">
<p>8</p>
</td>
<td class="cellalignment77" headers="r16c1-t40 r1c6-t40">
<p>6.</p>
</td>
<td class="cellalignment77" headers="r16c1-t40 r1c7-t40">
<p>7.</p>
</td>
<td class="cellalignment77" headers="r16c1-t40 r1c8-t40">
<p>PS_HORI</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r17c1-t40" headers="r1c1-t40">
<p>Page Size Vertical</p>
</td>
<td class="cellalignment77" headers="r17c1-t40 r1c2-t40">
<p>16</p>
</td>
<td class="cellalignment77" headers="r17c1-t40 r1c3-t40">
<p>PS_VERT</p>
</td>
<td class="cellalignment77" headers="r17c1-t40 r1c4-t40">
<p>Num</p>
</td>
<td class="cellalignment77" headers="r17c1-t40 r1c5-t40">
<p>8</p>
</td>
<td class="cellalignment77" headers="r17c1-t40 r1c6-t40">
<p>6.</p>
</td>
<td class="cellalignment77" headers="r17c1-t40 r1c7-t40">
<p>7.</p>
</td>
<td class="cellalignment77" headers="r17c1-t40 r1c8-t40">
<p>PS_VERT</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r18c1-t40" headers="r1c1-t40">
<p>Page Size Unit</p>
</td>
<td class="cellalignment77" headers="r18c1-t40 r1c2-t40">
<p>17</p>
</td>
<td class="cellalignment77" headers="r18c1-t40 r1c3-t40">
<p>PS_UNIT</p>
</td>
<td class="cellalignment77" headers="r18c1-t40 r1c4-t40">
<p>Char</p>
</td>
<td class="cellalignment77" headers="r18c1-t40 r1c5-t40">
<p>20</p>
</td>
<td class="cellalignment77" headers="r18c1-t40 r1c6-t40">
<p>$20.</p>
</td>
<td class="cellalignment77" headers="r18c1-t40 r1c7-t40">
<p>$20.</p>
</td>
<td class="cellalignment77" headers="r18c1-t40 r1c8-t40">
<p>PS_UNIT</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r19c1-t40" headers="r1c1-t40">
<p>Page Size Margin Left</p>
</td>
<td class="cellalignment77" headers="r19c1-t40 r1c2-t40">
<p>18</p>
</td>
<td class="cellalignment77" headers="r19c1-t40 r1c3-t40">
<p>PS_LEFT</p>
</td>
<td class="cellalignment77" headers="r19c1-t40 r1c4-t40">
<p>Num</p>
</td>
<td class="cellalignment77" headers="r19c1-t40 r1c5-t40">
<p>8</p>
</td>
<td class="cellalignment77" headers="r19c1-t40 r1c6-t40">
<p>6.2</p>
</td>
<td class="cellalignment77" headers="r19c1-t40 r1c7-t40">
<p>8.2</p>
</td>
<td class="cellalignment77" headers="r19c1-t40 r1c8-t40">
<p>PS_LEFT</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r20c1-t40" headers="r1c1-t40">
<p>Page Size Margin Top</p>
</td>
<td class="cellalignment77" headers="r20c1-t40 r1c2-t40">
<p>19</p>
</td>
<td class="cellalignment77" headers="r20c1-t40 r1c3-t40">
<p>PS_TOP</p>
</td>
<td class="cellalignment77" headers="r20c1-t40 r1c4-t40">
<p>Num</p>
</td>
<td class="cellalignment77" headers="r20c1-t40 r1c5-t40">
<p>8</p>
</td>
<td class="cellalignment77" headers="r20c1-t40 r1c6-t40">
<p>6.2</p>
</td>
<td class="cellalignment77" headers="r20c1-t40 r1c7-t40">
<p>8.2</p>
</td>
<td class="cellalignment77" headers="r20c1-t40 r1c8-t40">
<p>PS_TOP</p>
</td>
</tr>
<tr class="cellalignment71">
<td class="cellalignment77" id="r21c1-t40" headers="r1c1-t40">
<p>Volume Name</p>
</td>
<td class="cellalignment77" headers="r21c1-t40 r1c2-t40">
<p>20</p>
</td>
<td class="cellalignment77" headers="r21c1-t40 r1c3-t40">
<p>VOL_NAME</p>
</td>
<td class="cellalignment77" headers="r21c1-t40 r1c4-t40">
<p>Char</p>
</td>
<td class="cellalignment77" headers="r21c1-t40 r1c5-t40">
<p>255</p>
</td>
<td class="cellalignment77" headers="r21c1-t40 r1c6-t40">
<p>$255.</p>
</td>
<td class="cellalignment77" headers="r21c1-t40 r1c7-t40">
<p>$255.</p>
</td>
<td class="cellalignment77" headers="r21c1-t40 r1c8-t40">
<p>VOL_NAME</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" --></div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="BABFDDEJ"></a>
<div id="LSHDG1163" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Passing Values from a Program Instance to the Report Set for Post-Processing</h4>
<p>You call Oracle LSH APIs from either <a href="#BABCICEG">SAS</a> or <a href="#BABIGJEA">Oracle Reports or PL/SQL</a> to pass values from the executed Program instance to the Report Set for postprocessing.</p>
<p>Refer the <span class="italic">Oracle Life Sciences Data Hub Application Programming Interface Guide</span> for details.</p>
<a id="BABCICEG"></a>
<div id="LSHDG1164" class="sect4">
<h5 class="sect4">SAS</h5>
<p>The example function below uses APIs to retrieve values from the Program instance and pass them to Oracle LSH for Report Set postprocessing. It uses a PL/SQL wrapper that you call from SAS. Within the wrapper, the function calls several Oracle LSH public APIs to do the work.</p>
<p>If a particular Planned Output is not assigned to a Report Set Entry when you execute the Program instance, the function returns "Title for <span class="italic">fileref_name</span>" with the fileref name of the unassigned Planned Output.</p>
<div id="LSHDG1165" class="example">
<p class="titleinexample"><a id="sthref78"></a>Example 9-1 Function to Pass Title and Other Values from SAS to Oracle LSH</p>
<pre dir="ltr">
SAS code
--------------------------------------------------------------------------------
Proc SQL;
/*set the job context then send the output value*/
connect to oracle (user=%sysget(CDR_SCHEMA) pass=%sysget(CDR_PASSWD)
path=%sysget(CDR_DB) );
 
/* pass output parameter, sub title and title back to LSH */
execute(exec my_plsql_package.CallLSHApi(
'MyParamName'
,'My Param Value'
,'out1'
,'My Output Title'
,'out1'
,My Output Sub Title'
)
by oracle ;
 
PL/SQL code
--------------------------------------------------------------------------------
CREATE OR REPLACE PACKAGE my_plsql_package AS
Procedure CallLSHApi(
pi_vParamName IN varchar2
,pi_vParamValue IN varchar2
,pi_vTitleFileRef IN varchar2
,pi_vTitle IN varchar2
,pi_vSubTitleFileRef IN varchar2
,pi_vSubTitle IN varchar2
);
END my_plsql_package;
/
 
CREATE OR REPLACE PACKAGE BODY my_plsql_package AS
Procedure CallLSHApi(
pi_vParamName IN varchar2
,pi_vParamValue IN varchar2
,pi_vTitleFileRef IN varchar2
,pi_vTitle IN varchar2
,pi_vSubTitleFileRef IN varchar2
,pi_vSubTitle IN varchar2
) IS
 
return_status VARCHAR2(10);
msg_count NUMBER;
msg_data VARCHAR2(2000);
BEGIN
   Cdr_Pub_Exe_User_Utils.setOutputParams(p_api_version =&gt; 1
               ,p_init_msg_list =&gt; Cdr_Pub_Def_Constants.G_FALSE
               ,p_commit =&gt; Cdr_Pub_Def_Constants.G_FALSE
               ,p_validation_level =&gt; Cdr_Pub_Def_Constants.G_VALID_LEVEL_FULL
               ,x_return_status =&gt; return_status
               ,x_msg_count =&gt; msg_count
               ,x_msg_data =&gt; msg_data
               ,pi_vparamName =&gt; pi_vParamName
               ,pi_vparamValue =&gt; pi_vParamValue) ;
   IF return_status &lt;&gt; 'S' THEN
      RAISE_APPLICATION_ERROR(-20200,'Failed to call Cdr_Pub_Exe_User_Utils.setOutputParams: '||msg_data);
   END IF ;
   Cdr_Pub_Exe_User_Utils.SetCustomOutputTitle(p_api_version =&gt; 1
               ,p_init_msg_list =&gt; Cdr_Pub_Def_Constants.G_FALSE
               ,p_commit =&gt; Cdr_Pub_Def_Constants.G_FALSE
               ,p_validation_level =&gt;Cdr_Pub_Def_Constants.G_VALID_LEVEL_FULL
               ,x_return_status =&gt; return_status
               ,x_msg_count =&gt; msg_count
               ,x_msg_data =&gt; msg_data
               ,pi_vFileRef=&gt; pi_vTitleFileRef 
               ,pi_vValue =&gt; pi_vTitle ) ;
   IF return_status &lt;&gt; 'S' THEN
      RAISE_APPLICATION_ERROR(-20200,'Failed to call Cdr_Pub_Exe_User_Utils.SetCustomOutputTitle: '||msg_data);
   END IF ;
   Cdr_Pub_Exe_User_Utils.SetCustomOutputSubTitle(p_api_version =&gt; 1
               ,p_init_msg_list =&gt; Cdr_Pub_Def_Constants.G_FALSE
               ,p_commit =&gt; Cdr_Pub_Def_Constants.G_FALSE
               ,p_validation_level =&gt; Cdr_Pub_Def_Constants.G_VALID_LEVEL_FULL
               ,x_return_status =&gt; return_status
               ,x_msg_count =&gt; msg_count
               ,x_msg_data =&gt; msg_data
               ,pi_vFileRef=&gt; pi_vSubTitleFileRef 
               ,pi_vValue =&gt; pi_vSubTitle ) ;
   IF return_status &lt;&gt; 'S' THEN
      RAISE_APPLICATION_ERROR(-20200,'Failed to call Cdr_Pub_Exe_User_Utils.SetCustomOutputSubTitle: '||msg_data);
   END IF ;
END CallLSHApi;
END my_plsql_package;
/
</pre></div>
<!-- class="example" --></div>
<!-- class="sect4" -->
<a id="BABIGJEA"></a>
<div id="LSHDG1166" class="sect4">
<h5 class="sect4">Oracle Reports or PL/SQL</h5>
<p>To pass Title and Program property values from a Program instance to the Report Set for postprocessing in a PL/SQL Program, you can call Oracle LSH public APIs:</p>
<ul>
<li>
<p><span class="bold">Cdr_Pub_Exe_User_Utils.SetCustomOutputTitle</span>. Use this API to pass the title from the Report Set Entry to the Program instance.</p>
</li>
<li>
<p><span class="bold">Cdr_Pub_Exe_User_Utils.SetCustomOutputSubTitle</span>. Use this API to pass the subtitle from the Report Set Entry to the Program instance.</p>
</li>
<li>
<p><span class="bold">Cdr_Pub_Exe_User_Utils.setOutputParams</span>. Use this API to pass every other value you need from the Report Set Entry to the Program instance.</p>
</li>
</ul>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABCDJHA"></a>
<div id="LSHDG1169" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Installing Report Sets</h2>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABGJIGD">Installing the Report Set as a Whole with All Programs Checked In</a></p>
</li>
<li>
<p><a href="#BABFHHJG">Installing the Report Set as a Whole with Some Programs Checked Out</a></p>
</li>
<li>
<p><a href="#BABFHEJJ">Installing a Single Program Instance in the Report Set</a></p>
</li>
</ul>
<p>Installing a Report Set is complicated because of its size and the fact that many people can work on it at the same time. Depending on the exact timing of your action and other people's actions, you may receive an error message that the system cannot perform your action immediately because of a conflict with another user. Your work will not be lost and you can try again in a short time.</p>
<p>At the end of the installation process the system upgrades all checked in Report Set Execution Setups as necessary to synchronize them with the Report Set definition.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If someone is working on an Execution Setup, the Execution Setup is implicitly checked out. Checked out Execution Setups are not upgraded during installation. No message is displayed.</div>
<p>During the installation process, the Report Set instance itself (which includes the mappings of its Program instances to Table instances) is unavailable for modification. If the Report Set is very large the installation process may take a long time, so plan your installation accordingly.</p>
<p>To see a list of reasons Report Set instances may not be installable, see <a href="status.htm#BABHIEJG">Appendix A, "Installation Requirements for Each Object Type"</a>.</p>
<a id="BABGJIGD"></a>
<div id="LSHDG1170" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Installing the Report Set as a Whole with All Programs Checked In</h3>
<p>To install a Report Set as a whole, install its Work Area and include the Report Set in the installation.</p>
<p>If all the Programs in the Report Set are checked in, the system installs the whole Report Set and leaves the Report Set itself and all its Programs checked in. You can look at the installation log to see the details.</p>
<p>See <a href="wa_install.htm#CHDGCFAF">"Installing a Work Area and Its Objects"</a> for further information.</p>
</div>
<!-- class="sect2" -->
<a id="BABFHHJG"></a>
<div id="LSHDG1171" class="sect2">
<h3 class="sect2">Installing the Report Set as a Whole with Some Programs Checked Out</h3>
<p>If you install a Report Set instance and some of its Program instances are checked out by you and noone else, the system checks them in, checks in the Report Set instance and its source definition, and installs the Report Set instance.</p>
<p>If you install a Report Set instance and some of its Program instances are checked out by you and some by someone other than you, and you do not have the LSH Checkin Admin role, the system checks in and installs only the Program instances that were checked out by you. It does not check in the Program instances checked out by others, and it does not check in the Report Set instance or definition or install the Report Set instance.</p>
<p>To see which Programs were and were not installed, look at the installation log file.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If a user with the LSH Checkin Admin role installs a Report Set, all Program instances in the Report Set are checked in during the installation.</div>
</div>
<!-- class="sect2" -->
<a id="BABFHEJJ"></a>
<div id="LSHDG1172" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Installing a Single Program Instance in the Report Set</h3>
<p>When you install a single Program instance in a Report Set, the system does the following:</p>
<ul>
<li>
<p>Checks in the Program instance. its mappings, and its source Program definition. (If the Program definition is checked out by a user other than the user installing the Program instance, the installation fails.)</p>
</li>
<li>
<p>Checks in the Report Set Entry to which the Program instance is assigned and all Report Set Entries above it in the hierarchy</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The Report Set definition remains checked out.</div>
</li>
<li>
<p>Installs the Program instance</p>
</li>
<li>
<p>Installs the Report Set Entries, regardless of the setting of the Omit From Install flag</p>
</li>
<li>
<p>Installs the Report Set instance</p>
</li>
<li>
<p>Installs the Table instances to which the Program's Table Descriptors are mapped, if they are not already installed</p>
</li>
</ul>
<p>No other Program instances in the Report Set are checked in or installed.</p>
<p>You can install a Program instance in a Report Set in several different ways:</p>
<ul>
<li>
<p>In the Report Set Structure view, select one of the Report Set Entries assigned to the Program instance, select <span class="bold">Install Program</span> from the drop-down list, and click <span class="bold">Go</span>.</p>
</li>
<li>
<p>In the Report Set Program View, select the Program instance, select <span class="bold">Install</span> from the drop-down list, and click <span class="bold">Go</span>.</p>
</li>
<li>
<p>In the Program instance's Properties screen, click <span class="bold">Install</span>.</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABFFEHH"></a>
<div id="LSHDG1174" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Validating Report Set Definitions and Outputs</h2>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABHGAEE">Output Reuse</a></p>
</li>
<li>
<p><a href="#BABHDJBJ">Program Output Validation Flag</a></p>
</li>
<li>
<p><a href="#BABGHEGG">Report Set Validation Status</a></p>
</li>
<li>
<p><a href="#BABJEIHI">Summary Output Validation Status</a></p>
</li>
<li>
<p><a href="#BABHIGIB">Output-Oriented Validation</a></p>
</li>
<li>
<p><a href="#BABJACIF">Definition-Oriented Validation</a></p>
</li>
<li>
<p><a href="#BABJHHEF">Changing Validation Status</a></p>
</li>
</ul>
<p>A Report Set may have many Report Set Entries and Program instances in different stages of development at the same time, with reports on data that may become stable at different times. Each of these&mdash;Report Set Entries, Program instances, and outputs&mdash;has a validation status. You can promote different parts of the Report Set to a new validation status at different times.</p>
<p>Because of this complexity, Oracle LSH provides several tools and other functionality to help you manage Report Set validation:</p>
<ul>
<li>
<p><span class="bold">Output reuse</span>. Each time you run a Program in a Report Set, the system checks if a duplicate output already exists. If it does, the system does not generate the output again, so that any validation work you have done on the output is still valid. See <a href="#BABHGAEE">Output Reuse</a> for further information.</p>
</li>
<li>
<p><span class="bold">Validation Status</span>. Report Set instances and definitions both have a validation status like the validation status of other objects. There are some special rules for Report Sets; see <a href="#BABGHEGG">"Report Set Validation Status"</a>.</p>
</li>
<li>
<p><span class="bold">Summary Output Validation Status</span>. Report Set instances have an additional status that is automatically calculated for every Report Set Entry and the Report Set instance as a whole; see <a href="#BABJEIHI">"Summary Output Validation Status"</a>.</p>
</li>
</ul>
<p>There are two basic processes you can use to validate a Report Set output:</p>
<ul>
<li>
<p>Validate the content of each report output manually according to your company standards; see <a href="#BABHIGIB">"Output-Oriented Validation"</a>.</p>
</li>
<li>
<p>Validate each Program definition and instance according to your company standards. The Execution Setup inherits its validation status from the Program instance, and the output inherits its validation status from the Execution Setup; see <a href="#BABJACIF">"Definition-Oriented Validation"</a>.</p>
</li>
</ul>
<p>Oracle LSH supports both approaches with a flag for each Program definition; see <a href="#BABHDJBJ">"Program Output Validation Flag"</a>. It is possible to use both approaches within a single Report Set.</p>
<p>See <a href="deftasks.htm#BABGFFBG">"Validating Objects and Outputs"</a> for general information about validation.</p>
<a id="BABHGAEE"></a>
<div id="LSHDG1175" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Output Reuse</h3>
<p>Each time you run a Program in a Report Set, either directly or through the Report Set, the system checks if a duplicate output already exists. An output is a duplicate if it is generated by the same version of the same Program instance with the same Parameter values on data of the same currency and blinding status.</p>
<p>If the current Program execution would produce an output that is a duplicate of an existing output, the system reuses the existing output in the Report Set unless it has a validation status of Retired.</p>
<p>If all of a Program's Planned Outputs have reusable non-Retired duplicate outputs, the system does not execute the Program at all during the Report Set execution. If one or more Planned Outputs assigned to a Report Set Entry that is included in the execution does not have a reusable duplicate output, the system executes the Program and generates all outputs, but sets the new duplicate outputs' validation status to Retired.</p>
<p>If the system cannot execute a Program instance because it is checked out, or if it fails execution, the Report Set cannot reuse existing outputs because the Program version is different. The Report Set uses the <a href="#BABBJAIG">In Progress</a> OTD file as a placeholder for the ungenerated output.</p>
<p>The Jobs screen shows all subjobs that actually ran. The Report Set log file shows which subjobs produced the outputs that were actually used and lists the outputs.</p>
<p><a id="LSHDG1176"></a><span class="subhead3">Report Set Entry Properties and Reuse&nbsp;</span>Title- and format-related Report Set Entry properties can be passed to the Program instance assigned to that Report Set Entry. The same Program instance may have multiple Planned Outputs assigned to different Report Set Entries.</p>
<p>Oracle LSH tracks these Report Set Entry-specific values separately from other Parameter values and treats them differently in its duplicate output logic. If one of these values changes, only the output related to the Report Set Entry with the changed value is regenerated. All other outputs&mdash;assigned to other Report Set Entries&mdash;are reused if a duplicate non-Retired output exists.</p>
<p>For example, if Program A has Planned Outputs assigned to Report Set Entries 1.1, 1.2, and 1.3, and you enter a new value for Title or Font Size in Report Set Entry 1.1 only, and all other Parameter values and the data currency and Program instance version are the same since the last time the Program instance was executed, then the existing outputs for Report Set Entries 1.2 and 1.3 are reused.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can force the system to produce and use new outputs for the Report Set Entries included in a submission, even if they are duplicates, by setting the <span class="bold">Force Execution</span> flag to <span class="bold">Yes</span> in the Execution Setup.</div>
</div>
<!-- class="sect2" -->
<a id="BABHDJBJ"></a>
<div id="LSHDG1178" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Program Output Validation Flag</h3>
<p>The flag <span class="bold">Force Output Validation Status to 'Development'</span> is part of every Program definition. If selected, outputs of instances of this Program definition are always created with a validation status of Development. Use this setting if you plan to validate the contents of the output.</p>
<p>If deselected, the outputs inherit the validation status of the Execution Setup that produced them, which in turn can inherit its validation status from the Program instance. Use this setting if you plan to validate the source data and the Program, and allow the output to inherit its validation status from the Program's.</p>
<p>Your company can determine the default setting using an Oracle profile; see "Setting the Default Value for: Force Output Validation Status to Development" in the chapter on setting profile values in the <span class="italic"><span class="italic">Oracle Life Sciences Data Hub System Administrator's Guide</span></span>.</p>
<p>You can use both approaches in a single Report Set for different Programs.</p>
</div>
<!-- class="sect2" -->
<a id="BABGHEGG"></a>
<div id="LSHDG1179" class="sect2">
<h3 class="sect2">Report Set Validation Status</h3>
<p>Oracle LSH enforces the following validation rules for Report Sets, their Report Set Entries, and their Program instances:</p>
<ul>
<li>
<p>You can change the validation status of any Report Set Entry without affecting the validation status of other Report Set Entries either above or below it in the Report Set structure.</p>
</li>
<li>
<p>A Report Set or Report Set Entry cannot have a higher validation status than any of the Program instances it contains.</p>
</li>
<li>
<p>A Report Set cannot have a higher validation status than any of its Report Set Entries.</p>
</li>
<li>
<p>By default, the system calculates the validation status for a Report Set and for a Report Set volume, if any, as the lowest status of all the Report Set Entries it contains.</p>
</li>
</ul>
<p>The system cascades a validation status promotion as follows:</p>
<ul>
<li>
<p><span class="bold">Cascade Promotion from Report Set to Report Set Entries</span>. If you try to promote a Report Set to a higher validation status and all the Program instances in the Report Set are at that status (or higher), but all the Report Set Entries are not, you have the option of cascading the higher status to all the Report Set Entries as part of the Report Set promotion. If you choose not to cascade, the operation fails, because a Report Set cannot have a higher validation status than its Report Set Entries.</p>
<p>For example, if you want to promote a Report Set from Development to Quality Control (QC), and all of its Program instances are already at QC but some of its Report Set Entries are still at Development, you must promote the Report Set Entries to QC in order to promote the Report Set as a whole to QC. You can do this through a cascade operation as part of the Report Set promotion.</p>
</li>
<li>
<p><span class="bold">Cascade Promotion from Parent to Child Report Set Entries</span>. If you promote a Report Set Entry that has one or more child (or grandchild, etc.) Report Set Entries with a lower validation status, you receive a message offering you the opportunity to cascade the promotion to all its children. If you choose to proceed, the operation upgrades all child (and grandchild, and so on) Report Set Entries.</p>
<p>If you choose not to cascade, the operation will proceed for just the parent Report Set Entry.</p>
</li>
<li>
<p><span class="bold">Cascade Promotion from Program Instance to Definition</span>. As with Program instances outside Report Sets, you can cascade a validation promotion from the Program instance to its definition. If another user has checked out the definition, the operation fails.</p>
</li>
<li>
<p><span class="bold">Cascade Promotion from the Report Set Output to Contributing Outputs in the Same Job</span>. When you promote a Report Set PDF output, if any of the individual outputs included in it have a validation status lower than the one to which you are promoting the cumulative output, you receive a message asking if you would like to promote the contributing outputs produced in the same job. You must validate all or none of the PDF outputs.</p>
<p>For example, if you choose to run only one Program instance during the Report Set execution, and that Program instance produces multiple outputs, you can upgrade the validation status of all outputs produced by the Program at the same time.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Because you are forced to validate all or none of the contributing PDF outputs, if you plan to validate a report set output, be sure to selectively remove from the job any Report Set Entries that should not be validated.</div>
</li>
</ul>
<p>Oracle LSH enforces the following behavior for the Report Set and its components at the following validation statuses:</p>
<ul>
<li>
<p><span class="bold">Development</span>. When you create a new Report Set Entry, either by defining it or by copying it from another Report Set, it automatically receives a validation status of Development. Anyone with Modify privileges on the Report Set can work on it. Users can check out a Program definition through an instance of it in the Report Set if they have Modify privileges on the Program definition.</p>
</li>
<li>
<p><span class="bold">Quality Control</span>. When a Report Set Entry's validation status is set to Quality Control, a user must have the Modify QC privilege on Report Sets to modify the Report Set Entry in any way, including the addition or removal of a Program instance and Planned Output assignment. A user must have the Modify Validation Status QC privilege on Report Sets to set the validation status back to Development.</p>
</li>
<li>
<p><span class="bold">Production</span>. When a Report Set Entry's validation status is set to Production, a user must have the Modify Production privilege on Report Sets to modify the Report Set Entry in any way, including the addition or removal of a Program instance and Planned Output assignment. A user must have the Modify Validation Status Production privilege on Report Sets to set the validation status back to Development.</p>
</li>
<li>
<p><span class="bold">Retired</span>. You cannot set the validation status of a Report Set Entry, or a Program instance in a Report Set, to Retired. If you no longer want to use a Report Set Entry or Program instance, remove it from the Report Set.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BABJEIHI"></a>
<div id="LSHDG1180" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Summary Output Validation Status</h3>
<p>In addition to the standard validation status (VS), each Report Set Entry also has a Summary Output Validation Status (SOVS). You can use this status to track which Report Set Entries do not yet have a Planned Output assigned and, if you are validating outputs manually, which outputs have not yet been promoted to a new validation status.</p>
<p>The system automatically calculates the SOVS for each Report Set Entry based on the validation status of its actual "current" output (if any) and on the SOVS of its child Report Set Entries (if any).</p>
<p>The Summary Output Validation Status can have the following values:</p>
<ul>
<li>
<p><span class="bold">Null</span>. The system displays no SOVS if a Report Set Entry has a Planned Output assigned but no usable current output, or if the assigned Program instance is checked out.</p>
</li>
<li>
<p><span class="bold">Unassigned</span>. If a Report Set Entry is not marked as a placeholder and does not have a Planned Output or a Narrative assigned, the SOVS is Unassigned.</p>
</li>
<li>
<p><span class="bold">N/A (Not Applicable)</span>. If a Report Set Entry has no child Report Set Entries and either is marked as a placeholder or has a Narrative assigned, its SOVS is N/A. If a Report Set Entry does have one or more child Report Set Entries, its SOVS is N/A only if it meets both of the following conditions: all its and, in addition,</p>
<ul>
<li>
<p>The SOVS of all its child Report Set Entries is N/A.</p>
</li>
<li>
<p>It is marked as a placeholder or has a Narrative assigned.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Although this status supports a practice of not including Narratives and Planned Outputs in the same Report Set Entry, it is in fact possible to have both. Be aware that if you assign a Narrative to a Report Set Entry before you assign a Planned Output, the SOVS will be N/A instead of Unassigned.</div>
</li>
<li>
<p><span class="bold">Development</span>. If any of a Report Set Entry's child Report Set Entries has an SOVS of Null or Unassigned, the parent Report Set Entry's SOVS is Development.</p>
<p>In addition, a Report Set Entry inherits the SOVS of its current output (if any) or any of its child Report Set Entries (if any), whichever has the lowest SOVS. If any of these is Development, the Report Set Entry is also set to Development.</p>
</li>
<li>
<p><span class="bold">Retired</span>. If the current output of a Report Set Entry is manually set to Retired, the Report Set Entry's SOVS is also set to Retired. When the Report Set Entry's Program generates a new output, the system changes the Report Set Entry's SOVS to reflect that output's validation status.</p>
</li>
<li>
<p><span class="bold">Quality Control (QC)</span>. A Report Set Entry has an SOVS of Quality Control if the lowest SOVS of any of its child Report Set Entries or its current output (if any) is Quality Control.</p>
</li>
<li>
<p><span class="bold">Production</span>. A Report Set Entry has an SOVS of Production if the lowest SOVS of any of its child Report Set Entries or its current output (if any) is Production.</p>
</li>
</ul>
<p>The Report Set definition inherits the SOVS of its child Report Set Entry with the lowest SOVS. The Report Set instance inherits its SOVS from the Report Set definition.</p>
<p>The SOVS is displayed only in the context of a Report Set instance in a Work Area, not for the Report Set definition in its Application Area or Domain.</p>
</div>
<!-- class="sect2" -->
<a id="BABHIGIB"></a>
<div id="LSHDG1181" class="sect2">
<h3 class="sect2">Output-Oriented Validation</h3>
<p>In the output-oriented validation approach, you validate an actual report, including all its data, using the same validation standards your company has always used. The system continues to include the report you have validated in the Report Set as long as you continue to run the same Program instance version with the same currency, blinding status, and Parameter values; see <a href="#BABHGAEE">"Output Reuse"</a> for further information.</p>
<p>If you use the same Program instance to generate a new output of data of a different currency or blinding status, or change any other Parameter values, you must validate the resulting new output.</p>
<p>The output-oriented validation process includes the following steps:</p>
<ol>
<li>
<p>When you define Programs for use in a Report Set, set the <span class="bold">Force Output Validation Status to 'Development'</span> flag to <span class="bold">Yes</span>; see <a href="progs.htm#CHDFGBAI">"Creating a Program"</a> for further information.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <span class="bold">Force Output Validation Status to 'Development'</span> flag is a property of the Program definition, not the instance.</div>
</li>
<li>
<p>Define and test the Report Set structure and Program instances inside the Report Set over time.</p>
</li>
<li>
<p>When the data a particular Program reports on reaches a point where it should be included in a report for internal use or submission, apply a snapshot label&mdash;for example, "Interim"&mdash;to the relevant Table instances, either through the job that writes the data to the Table instances or directly in the Work Area(<a href="wa_install.htm#CHDGCFIJ">"Managing Table Instance Snapshot Labels in a Work Area"</a>). This step is optional but recommended.</p>
</li>
<li>
<p>Run the Report Set Entries assigned to the Program that runs on the stable data.</p>
</li>
<li>
<p>Validate each resulting output according to your company's policies, first to Quality Control (QC) and then to Production. The system applies the validation status of the output to the Summary Output Validation Status (SOVS) of the corresponding Report Set Entry; see <a href="#BABJEIHI">"Summary Output Validation Status"</a>.</p>
</li>
<li>
<p>Manually upgrade the standard validation status (VS) of the Program instance and definition and the associated Report Set Entry.</p>
</li>
<li>
<p>Follow the same process for other outputs and their Program instances and definitions and Report Set Entries, until the entire Report Set reaches a higher validation status.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The Report Set output as a whole inherits the validation status of the Program output with the lowest validation status.
<p>The Report Set definition and instance, and each volume defined in a Report Set, inherit the validation status of the Report Set Entry with the lowest validation status they contain.</p>
</div>
</li>
</ol>
<p>When the source data for the original Program reaches another point where it should be included in a report for internal use or submission, apply another snapshot label; for example, "Final," and repeat the process.</p>
</div>
<!-- class="sect2" -->
<a id="BABJACIF"></a>
<div id="LSHDG1182" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Definition-Oriented Validation</h3>
<p>In the definition-oriented validation approach, you develop standards for validating the Program instances (and their source Program definitions) that generate each Report Set report output. For example, you can use different sets of test data to test whether the report output contains the correct data. When you have successfully validated the Program definition and instance and set their validation status to Production, the Execution Setups of the Program instances inherit the validation status of Production and the outputs they produce also inherit a validation status of Production.</p>
<p>If you run the same version of the Program instance with different data currency, blinding status, or other Parameter values, the new outputs also have a validation status of Production.</p>
<p>The definition-oriented validation process includes the following steps:</p>
<ol>
<li>
<p>When you define Programs for use in a Report Set, set the <span class="bold">Force Output Validation Status to 'Development'</span> flag to <span class="bold">No</span>; see <a href="progs.htm#CHDFGBAI">"Creating a Program"</a> for further information.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <span class="bold">Force Output Validation Status to 'Development'</span> flag is a property of the Program definition, not the instance.</div>
</li>
<li>
<p>Define and test the Report Set structure and Program instances inside the Report Set over time.</p>
</li>
<li>
<p>Promote each Program instance and the Report Set Entries to which it is assigned to Quality Control, according to your company's policies.</p>
</li>
<li>
<p>Promote each Program instance and the Report Set Entries to which it is assigned to Production, according to your company's policies.</p>
</li>
<li>
<p>Run the Report Set, or parts of the Report Set, on the appropriate data snapshot(s). The resulting output inherits its validation status from the Execution Setup that generated it, which in turn inherits its validation status from the Report Set instance. If the Report Set instance is set to Production, the output is also set to Production.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The Report Set output inherits the validation status of the Program output with the lowest validation status.
<p>The Report Set definition and instance, and each volume defined in a Report Set, automatically receive the validation status of the lowest Report Set Entry they contain.</p>
</div>
</li>
</ol>
<p>You can manually reset the validation status of an output at any time, subject to your company's policies.</p>
</div>
<!-- class="sect2" -->
<a id="BABJHHEF"></a>
<div id="LSHDG1183" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Changing Validation Status</h3>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABHCJBG">Changing the Validation Status of an Output</a></p>
</li>
<li>
<p><a href="#BABCAGFI">Changing the Validation Status of a Report Set Entry</a></p>
</li>
<li>
<p><a href="#BABHJIBA">Changing the Validation Status of a Program Instance in a Report Set</a></p>
</li>
</ul>
<a id="BABHCJBG"></a>
<div id="LSHDG1184" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Changing the Validation Status of an Output</h4>
<p>When you upgrade the validation status of an output, you must validate the status off all contributing outputs produced during the same job.</p>
<p>To change the Validation Status of a Report Set output, do the following:</p>
<ol>
<li>
<p>Navigate to the Report Set output in either the Reports or My Home page:</p>
<ul>
<li>
<p>In the Reports tab, navigate the hierarchy that contains the Report Set, then click the icon in the Action column for the output.</p>
</li>
<li>
<p>In the Job Executions section of the My Home page, click the Job ID, then on the Output Name.</p>
</li>
</ul>
</li>
<li>
<p>From the <span class="bold">Actions</span> drop-down, select <span class="bold">Validation Supporting Info</span> and click <span class="bold">Go</span>.</p>
</li>
<li>
<p>Select the <span class="bold">Validation Status</span> you want from the drop-down list and click <span class="bold">Update</span>. If any of the contributing Program outputs produced during the same Report Set execution have a validation status lower than the new validation status you are applying, the system displays a message giving the number of such outputs and asks if you want to continue.</p>
<p>If you choose to continue, all contributing outputs are promoted.</p>
<p>If you choose not to continue, none of the contributing outputs is promoted.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BABCAGFI"></a>
<div id="LSHDG1185" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Changing the Validation Status of a Report Set Entry</h4>
<p>To change the Validation Status of a Report Set Entry, do the following:</p>
<ol>
<li>
<p>Navigate to the main page for the Report Set Entry. For example, from the Report Set structure screen, navigate in the Report Set hierarchy to the Report Set Entry and click its name.</p>
</li>
<li>
<p>From the <span class="bold">Actions</span> drop-down, select <span class="bold">Validation Supporting Info</span> and click <span class="bold">Go</span>.</p>
</li>
<li>
<p>Select the <span class="bold">Validation Status</span> you want from the drop-down list and click <span class="bold">Update</span>.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BABHJIBA"></a>
<div id="LSHDG1186" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Changing the Validation Status of a Program Instance in a Report Set</h4>
<p>To change the Validation Status of a Program instance in a Report Set, do the following:</p>
<ol>
<li>
<p>Navigate to the main page for the Program instance. For example, from the Report Set structure screen, navigate in the Report Set hierarchy to a Report Set Entry to which the Program instance is assigned, then click the Program name in the <span class="bold">Assigned Program Instance</span> column.</p>
</li>
<li>
<p>From the <span class="bold">Actions</span> drop-down, select <span class="bold">Validation Supporting Info</span> and click <span class="bold">Go</span>.</p>
</li>
<li>
<p>Select the <span class="bold">Validation Status</span> you want from the drop-down list and click <span class="bold">Update</span>.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHGJJFG"></a>
<div id="LSHDG1187" class="sect1">
<h2 class="sect1">About Report Set Planned Outputs</h2>
<p>Individual reports in a Report Set are the Planned Outputs of the Program instances associated with the Report Set.</p>
<p>In addition, the system automatically creates two Planned Outputs for the Report Set as a whole:</p>
<ul>
<li>
<p>The Report Set log file.</p>
</li>
<li>
<p>The Report Set itself; all reports on data. By default, the system creates one Planned Output and gives it the same name (not the title) as the Report Set.</p>
<p>You can define volume breaks and volume names in Report Set Entries. The system produces each volume as a separate file. Volumes are not displayed in the Planned Outputs subtab. See <a href="#BABJFJIJ">"Setting Report Set Entry Properties"</a> for further information.</p>
<p>You can override Volume Break settings in Report Set Entries by defining a value for the Single Volume Output Name Post-Processing Parameter at the Report Set level.</p>
</li>
<li>
<p>The table of contents is generated as a separate file if the TOC Parameter is set to <span class="bold">Yes</span> and the Report Set contains multiple volumes.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="BABEIABF"></a>
<div id="LSHDG1189" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Modifying Report Sets</h2>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BEIHEIIH">Modifying Report Set Instance Properties</a></p>
</li>
<li>
<p><a href="#BEIFACCF">Modifying Report Set Definition Properties</a></p>
<ul>
<li>
<p><a href="#BABBIFBF">Modifying the Report Set Structure</a></p>
</li>
<li>
<p><a href="#BABBAJGG">Modifying Report Set Entries</a></p>
</li>
<li>
<p><a href="#BABFBEJE">Modifying Programs</a></p>
</li>
</ul>
</li>
</ul>
<p>If you have the necessary privileges, you can modify a Report Set either through an instance of it in a Work Area or directly in the definition in its Domain or Application Area. In most cases it makes sense to work through an instance in a Work Area for the following reasons:</p>
<ul>
<li>
<p>In order to use or test changes to the definition you must create and install an instance of it.</p>
</li>
<li>
<p>If you work through an instance, the system automatically repoints the instance to the new version of the definition.</p>
</li>
</ul>
<p>However, if you need to change properties of the definition, you must work directly in the definition in its Domain or Work Area.</p>
<p>Whether you work in an instance or directly in the definition, when you check in the new version of the definition you have the opportunity to upgrade instances of the original definition to the new version; see <a href="deftasks.htm#BEIHAHEE">"Upgrading Object Instances to a New Definition Version"</a>.</p>
<a id="BEIHEIIH"></a>
<div id="LSHDG1190" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Modifying Report Set Instance Properties</h3>
<p>On the Report Set instance's Properties screen, click <span class="bold">Update</span> to enter changes. Oracle LSH creates a new version of the instance you are working on and applies your changes to it when you click <span class="bold">Apply</span>. Click <span class="bold">Cancel</span> to discard your changes and the new version.</p>
<p>You can modify some properties through the <span class="bold">Actions</span> drop-down list; see <a href="deftasks.htm#CIHDAIFF">"Using the Actions Drop-Down List"</a> for further information.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must reinstall the Report Set for the changes to take effect.</div>
<p>You can modify the following:</p>
<p><a id="LSHDG1191"></a><span class="subhead3">Name&nbsp;</span>See <a href="deftasks.htm#CHDBIJAH">"Naming Objects"</a> for further information.</p>
<p><a id="LSHDG1192"></a><span class="subhead3">Description&nbsp;</span>See <a href="deftasks.htm#CHDIHBBC">"Creating and Using Object Descriptions"</a> for further information.</p>
<p><a id="BEIEIDIF"></a><a id="LSHDG1193"></a><span class="subhead3">Definition Source&nbsp;</span>This field applies to the instance only. It specifies the Report Set definition to which this Report Set instance points. It generally does not make sense to change the source definition for the following reasons:</p>
<ul>
<li>
<p>Changing the definition may result in a new set of Table Descriptors, Source Code, Parameters, and Planned Outputs.</p>
</li>
<li>
<p>Any new Table Descriptors are not mapped.</p>
</li>
<li>
<p>The Report Set's status changes to <span class="bold">Non Installable</span>.</p>
</li>
</ul>
<p>If you want to change to a new version of the same definition, use the <span class="bold">Upgrade Instance</span> option from the <span class="bold">Actions</span> drop-down list.</p>
</div>
<!-- class="sect2" -->
<a id="BEIFACCF"></a>
<div id="LSHDG1194" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Modifying Report Set Definition Properties</h3>
<p>You can go to a Report Set definition's Properties screen in one of the following ways:</p>
<ul>
<li>
<p><span class="bold">From the Report Set's Properties screen</span>: Click the hyperlink of the Report Set definition that appears in the Definition field. See <a href="#BEIBJFEE">"Definition"</a>.</p>
</li>
<li>
<p><span class="bold">From the Domain or Application Area where you created the definition</span>: Click Manage Definitions to view all the definitions in that Domain or Application Area. Click the definition name.</p>
</li>
</ul>
<p>Once on the Report Set definition screen, click <span class="bold">Update</span> to enter changes. Oracle LSH creates a new version of the definition. You can change the following properties:</p>
<p><a id="LSHDG1195"></a><span class="subhead3">Name&nbsp;</span>See <a href="deftasks.htm#CHDBIJAH">"Naming Objects"</a> for further information.</p>
<p><a id="LSHDG1196"></a><span class="subhead3">Description&nbsp;</span>See <a href="deftasks.htm#CHDIHBBC">"Creating and Using Object Descriptions"</a> for further information.</p>
<p>You can modify some properties through the <span class="bold">Actions</span> drop-down list; see <a href="deftasks.htm#CIHDAIFF">"Using the Actions Drop-Down List"</a> for further information.</p>
<a id="BABBIFBF"></a>
<div id="LSHDG1197" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Modifying the Report Set Structure</h4>
<p>You can modify the Report Set's structure in two places:</p>
<ul>
<li>
<p><span class="bold">Report Set Structure view</span>. You can add, remove, copy, and move Report Set Entries here; see <a href="#BABFAEEG">"Using the Report Set Structure View"</a>.</p>
</li>
<li>
<p><span class="bold">Report Set or Report Set Entry Properties screen</span>. You can also add, remove, copy, and move Report Set Entries in Entries subtab of the Properties screen of the parent Report Set or Report Set Entry; see <a href="#BABIHIGD">"Defining Report Set Entries"</a>.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABBAJGG"></a>
<div id="LSHDG1198" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Modifying Report Set Entries</h4>
<p>To modify many aspects of a Report Set Entry definition, you must go to its Properties screen. You can go to the Properties screen by clicking its hyperlink in the Report Set Structure view or in its parent Report Set or Report Set Entry's Properties screen, then do the following:</p>
<ul>
<li>
<p>Click <span class="bold">Update</span> to modify a Report Set Entry's properties, change its Program or Planned Output assignment, or its associated narrative(s)see <a href="#BABIHIGD">"Defining Report Set Entries"</a>.</p>
</li>
<li>
<p>Click the <span class="bold">Entries</span> subtab to add, remove, or reorder a Report Set Entry's child Report Set Entries.</p>
</li>
<li>
<p>Click the <span class="bold">Parameters</span> subtab to add, remove, or modify Parameters defined in the Report Set Entry for the purpose of value sharing; see <a href="#BABEFFGI">"Creating Parameters for Sharing Values within the Report Set"</a>.</p>
</li>
<li>
<p>Click the <span class="bold">Post-Processing</span> subtab to change the value or properties of the predefined post-processing Parameters; see <a href="#CIHFHIIG">"Setting Post-Processing Parameter Values"</a>.</p>
</li>
<li>
<p>Click the <span class="bold">Overlay Templates</span> subtab to change the value or properties of the predefined overlay template Parameters; see <a href="#BABBCIAA">"Setting Overlay Template Parameter Values"</a>.</p>
</li>
</ul>
<p>In addition, you can use the Report Set Structure view to change a Report Set Entry's Program or Planned Output assignment or reorder its child Report Set Entries; see <a href="#BABFAEEG">"Using the Report Set Structure View"</a>.</p>
</div>
<!-- class="sect3" -->
<a id="BABFBEJE"></a>
<div id="LSHDG1199" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Modifying Programs</h4>
<p>The Program instances contained in a Report Set belong to the Report Set definition. Their mappings belong to the Report Set instance. You modify Programs in a Report Set the same way you modify Programs outside a Report Set; see <a href="progs.htm#BABBDBEC">Chapter 5, "Defining Programs"</a>. You can reach the Program instance screen in a Report Set by clicking its hyperlink in any of several places:</p>
<ul>
<li>
<p>Click its hyperlink in the Report Set Structure view next to one of the Report Set Entries to which it is assigned.</p>
</li>
<li>
<p>Click its hyperlink in the Report Set Program view.</p>
</li>
<li>
<p>Click it hyperlink in the Properties screen of one of the Report Set Entries to which it is assigned.</p>
</li>
</ul>
<p>You can map the Table Descriptors of a Program in a Report Set in several different ways; see <a href="#BABIBFEJ">"Mapping"</a>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment70">
<tr>
<td class="cellalignment77">
<table class="cellalignment75">
<tr>
<td class="cellalignment74"><a href="dm.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment74"><a href="wkfl.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2006, 2018,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment79">
<table class="cellalignment73">
<tr>
<td class="cellalignment74"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment74"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment74"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment74"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
